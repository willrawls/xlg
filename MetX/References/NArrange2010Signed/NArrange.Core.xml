<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NArrange.Core</name>
    </assembly>
    <members>
        <member name="T:NArrange.Core.Configuration.ElementReferenceConfiguration">
            <summary>
            Element reference configuration.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.ConfigurationElement">
            <summary>
            Base configuration element class.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ConfigurationElement._elements">
            <summary>
            Child element collection.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ConfigurationElement._elementsSynchLock">
            <summary>
            Child element collection sychronization lock object.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.ConfigurationElement.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.Configuration.ConfigurationElement.BaseClone">
            <summary>
            Creates a new instance and copies state.
            </summary>
            <returns>Creates an clone of the instance with the base state copied.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.ConfigurationElement.DoClone">
            <summary>
            Creates a new instance of this type and copies state.
            </summary>
            <returns>Clone of this instance.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.ConfigurationElement.Elements">
            <summary>
            Gets the collection of child elements.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ElementReferenceConfiguration._id">
            <summary>
            The referenced element ID.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ElementReferenceConfiguration._referencedElement">
            <summary>
            The referenced element, if loaded.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.ElementReferenceConfiguration.ToString">
            <summary>
            Gets a string representation.
            </summary>
            <returns>The string represetation.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.ElementReferenceConfiguration.DoClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone of this instance.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.ElementReferenceConfiguration.Elements">
            <summary>
            Gets the collection of element configurations.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.ElementReferenceConfiguration.Id">
            <summary>
            Gets or sets the element reference identifier.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.ElementReferenceConfiguration.ReferencedElement">
            <summary>
            Gets the referenced element configuration.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.MethodElement">
            <summary>
            Method element.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.InterfaceMemberElement">
            <summary>
            Base class for interface member elements.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.MemberElement">
            <summary>
            Member code element.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.AttributedElement">
            <summary>
            Represents a code element that can have attributes.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.TextCodeElement">
            <summary>
            Code element base class with text.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.CommentedElement">
            <summary>
            Code element base class for elements with header comments.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.CodeElement">
            <summary>
            Code element base class.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.ICodeElement">
            <summary>
            Interface for a code element.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <param name="visitor">The visitor.</param>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElement.AddChild(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Adds a child to this element.
            </summary>
            <param name="childElement">The child element to add.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElement.ClearChildren">
            <summary>
            Removes all child elements.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElement.InsertChild(System.Int32,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Inserts a child at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="childElement">The child element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElement.RemoveChild(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Removes a child from this element.
            </summary>
            <param name="childElement">The child element to remove.</param>
        </member>
        <member name="P:NArrange.Core.CodeElements.ICodeElement.Children">
            <summary>
            Gets any children of this code element.
            </summary>
            <remarks>For a class, this would return
            all member, methods, properties and nested types.</remarks>
        </member>
        <member name="P:NArrange.Core.CodeElements.ICodeElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.ICodeElement.Name">
            <summary>
            Gets the name of the code element.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.ICodeElement.Parent">
            <summary>
            Gets or sets the parent of this element.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.CodeElement._childrenLock">
            <summary>
            Children synch lock.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.CodeElement._extendedProperties">
            <summary>
            Extened property dictionary.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.CodeElement._children">
            <summary>
            Collection of chile code elements.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.CodeElement._name">
            <summary>
            Element name.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.CodeElement._parent">
            <summary>
            Parent code element.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.CodeElement.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.CodeElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
            <param name="visitor">Visitor to accept the code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.CodeElement.AddChild(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Adds a child to this element.
            </summary>
            <param name="childElement">Child to add.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.CodeElement.ClearChildren">
            <summary>
            Removes all child elements.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.CodeElement.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.CodeElements.CodeElement.InsertChild(System.Int32,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Inserts a child element at the specified index.
            </summary>
            <param name="index">Index to insert at.</param>
            <param name="childElement">Element to insert.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.CodeElement.RemoveChild(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Removes a child from this element.
            </summary>
            <param name="childElement">Child element to remove.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.CodeElement.ToString">
            <summary>
            Gets the string representation of this object.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:NArrange.Core.CodeElements.CodeElement.ToString(System.String)">
            <summary>
            Gets a string representation of this object using the specified format string.
            </summary>
            <param name="format">Code element format string.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:NArrange.Core.CodeElements.CodeElement.DoClone">
            <summary>
            Creates a clone of the instance and assigns any state.
            </summary>
            <returns>Clone of the code element.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.CodeElement.Children">
            <summary>
            Gets the collection of children for this element.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.CodeElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.CodeElement.Name">
            <summary>
            Gets or sets the code element name.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.CodeElement.Parent">
            <summary>
            Gets or sets the parent element.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.CodeElement.BaseChildren">
            <summary>
            Gets the base child collection.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.CodeElement.Item(System.String)">
            <summary>
            Gets or sets an extended property.
            </summary>
            <param name="key">Extended property name/key.</param>
            <returns></returns>
        </member>
        <member name="F:NArrange.Core.CodeElements.CommentedElement._commentsLock">
            <summary>
            Synchronization lock for the comments collection.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.CommentedElement._comments">
            <summary>
            Comments for this element.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.CommentedElement.AddHeaderComment(NArrange.Core.CodeElements.ICommentElement)">
            <summary>
            Adds a header comment to this element.
            </summary>
            <param name="comment">The comment.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.CommentedElement.AddHeaderCommentLine(System.String)">
            <summary>
            Adds a header comment line to this element.
            </summary>
            <param name="commentLine">The comment line.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.CommentedElement.AddHeaderCommentLine(System.String,System.Boolean)">
            <summary>
            Adds a header comment line to this element.
            </summary>
            <param name="commentLine">Comment line text.</param>
            <param name="xmlComment">Whether or not the comment is an XML comment.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.CommentedElement.ClearHeaderCommentLines">
            <summary>
            Clears all header comments.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.CommentedElement.Clone">
            <summary>
            Creates a clone of the instance and assigns any state.
            </summary>
            <returns>Clone of this instance.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.CommentedElement.HeaderComments">
            <summary>
            Gets the collection of header comments.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.CommentedElement.BaseHeaderComments">
            <summary>
            Gets the base header comment collection.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.TextCodeElement._bodyText">
            <summary>
            Body/block text.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.TextCodeElement.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.TextCodeElement.Clone">
            <summary>
            Creates a clone of the instance and assigns any state.
            </summary>
            <returns>Clone of this instance.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.TextCodeElement.BodyText">
            <summary>
            Gets or sets the body text.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.IAttributedElement">
            <summary>
            Interface for a code element with attributes.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.IAttributedElement.Attributes">
            <summary>
            Gets the collection of attributes associated with this element.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.AttributedElement._attributesLock">
            <summary>
            Synch lock object for the attributes collection.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.AttributedElement._access">
            <summary>
            The element's accessibility.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.AttributedElement._attributes">
            <summary>
            Attributes associated with this element.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.AttributedElement.#ctor">
            <summary>
            Creates a new AttributedElement.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.AttributedElement.AddAttribute(NArrange.Core.CodeElements.IAttributeElement)">
            <summary>
            Adds an attribute to this code element.
            </summary>
            <param name="attributeElement">Attribute element to add.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.AttributedElement.ClearAttributes">
            <summary>
            Removes all attributes elements.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.AttributedElement.RemoveAttribute(NArrange.Core.CodeElements.IAttributeElement)">
            <summary>
            Removes an attribute from this element.
            </summary>
            <param name="attributeElement">Attribute element to remove.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.AttributedElement.DoAttributedClone">
            <summary>
            Creates a clone of the instance and copies any state.
            </summary>
            <returns>Cloned attribute element state.</returns>
        </member>
        <member name="M:NArrange.Core.CodeElements.AttributedElement.DoClone">
            <summary>
            Creates a clone of the instance and copies any state.
            </summary>
            <returns>A clone of the instance.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.AttributedElement.Access">
            <summary>
            Gets or sets the code element access level.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.AttributedElement.Attributes">
            <summary>
            Gets the read-only collection of attributes.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.AttributedElement.BaseAttributes">
            <summary>
            Gets the writable collection of attributes.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.MemberElement._memberModifiers">
            <summary>
            Modifiers for the member.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.MemberElement._type">
            <summary>
            The return type of the member.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.MemberElement.DoAttributedClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Cloned attribute element state.</returns>
        </member>
        <member name="M:NArrange.Core.CodeElements.MemberElement.DoMemberClone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of the instance with the member element state copied.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.MemberElement.IsAbstract">
            <summary>
            Gets a value indicating whether or not the member is abstract.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MemberElement.IsNew">
            <summary>
            Gets a value indicating whether or not the member is new.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MemberElement.IsOverride">
            <summary>
            Gets a value indicating whether or not the member is an override.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MemberElement.IsSealed">
            <summary>
            Gets a value indicating whether or not the member is sealed.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MemberElement.IsStatic">
            <summary>
            Gets a value indicating whether or not the member is static.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MemberElement.IsUnsafe">
            <summary>
            Gets a value indicating whether or not the member is unsafe.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MemberElement.IsVirtual">
            <summary>
            Gets a value indicating whether or not the member is virtual.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MemberElement.MemberModifiers">
            <summary>
            Gets or sets the member attributes.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MemberElement.Type">
            <summary>
            Gets or sets the type of the member.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.InterfaceMemberElement._implementsLock">
            <summary>
            Synchronization lock for the implements collection.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.InterfaceMemberElement._implements">
            <summary>
            List of interfaces the member implements.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.InterfaceMemberElement.AddImplementation(NArrange.Core.CodeElements.InterfaceReference)">
            <summary>
            Adds an item to the Implements collection.
            </summary>
            <param name="implementation">The implementation.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.InterfaceMemberElement.DoInterfaceMemberClone">
            <summary>
            Clones this instance.
            </summary>
            <returns> Clone of the instance with the interface member element state copied.</returns>
        </member>
        <member name="M:NArrange.Core.CodeElements.InterfaceMemberElement.DoMemberClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            Clone of the instance with the member element state copied.
            </returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.InterfaceMemberElement.Implements">
            <summary>
            Gets the list of interface implementations.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.InterfaceMemberElement.ImplementsBase">
            <summary>
            Gets the list of interface implementations.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.IGenericElement">
            <summary>
            Interface for generic elements.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.IGenericElement.AddTypeParameter(NArrange.Core.CodeElements.TypeParameter)">
            <summary>
            Adds a type parameter to the element.
            </summary>
            <param name="typeParameter">The type parameter.</param>
        </member>
        <member name="P:NArrange.Core.CodeElements.IGenericElement.TypeParameters">
            <summary>
            Gets the list of type parameters.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.MethodElement._typeParametersLock">
            <summary>
            Synchronization lock for the type paramaters list.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.MethodElement._isOperator">
            <summary>
            Whether or not the method is an operator.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.MethodElement._operatorType">
            <summary>
            Operator type, if applicable.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.MethodElement._params">
            <summary>
            Method parameters as a comma-separated list (including any attributes).
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.MethodElement._typeParameters">
            <summary>
            Generic type parameters.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.MethodElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <param name="visitor">Visitor to accept the code element.</param>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
        </member>
        <member name="M:NArrange.Core.CodeElements.MethodElement.AddTypeParameter(NArrange.Core.CodeElements.TypeParameter)">
            <summary>
            Adds a type parameter to the type parameter list.
            </summary>
            <param name="typeParameter">Type paramater to add.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.MethodElement.DoInterfaceMemberClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            Clone of the instance with the interface member element state copied.
            </returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.MethodElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MethodElement.IsExternal">
            <summary>
            Gets a value indicating whether or not the member is external.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MethodElement.IsOperator">
            <summary>
            Gets or sets a value indicating whether or not the method is an operator.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MethodElement.IsPartial">
            <summary>
            Gets a value indicating whether or not the method is a partial method.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MethodElement.OperatorType">
            <summary>
            Gets or sets the operator type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MethodElement.Parameters">
            <summary>
            Gets or sets the parameter list 
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MethodElement.TypeParameters">
            <summary>
            Gets the list of type parameters.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.MethodElement.TypeParametersBase">
            <summary>
            Gets the list of type parameters.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.EventElement">
            <summary>
            Event element.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.EventElement._params">
            <summary>
            Event parameters as a comma-separate list with attributes.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.EventElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <param name="visitor">Visitor to accept the code element.</param>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
        </member>
        <member name="M:NArrange.Core.CodeElements.EventElement.DoInterfaceMemberClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone of the element with the interface member state copied.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.EventElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.EventElement.Parameters">
            <summary>
            Gets or sets the parameter list 
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.ConditionDirectiveElement">
            <summary>
            Code element for conditional preprocessor directives.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.ConditionDirectiveElement._elseCondition">
            <summary>
            Linked else condition.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.ConditionDirectiveElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <param name="visitor">Visitor to accept the code element.</param>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
        </member>
        <member name="M:NArrange.Core.CodeElements.ConditionDirectiveElement.DoClone">
            <summary>
            Creates an instance for cloning.
            </summary>
            <returns>Clone of the code element.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.ConditionDirectiveElement.ConditionExpression">
            <summary>
            Gets or sets the condition expression for the directive.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.ConditionDirectiveElement.ElementType">
            <summary>
            Gets the code element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.ConditionDirectiveElement.ElseCondition">
            <summary>
            Gets or sets the else condition directive element.
            </summary>
        </member>
        <member name="T:NArrange.Core.ProjectHandler">
            <summary>
            This class provides instances for handling project parsing requests 
            based on file extension.
            </summary>
        </member>
        <member name="F:NArrange.Core.ProjectHandler._configuration">
            <summary>
            Configuration for the project handler.
            </summary>
        </member>
        <member name="F:NArrange.Core.ProjectHandler._assembly">
            <summary>
            Assembly used for loading the project handler Type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ProjectHandler._projectParser">
            <summary>
            Project parser for getting a list of source files in a project.
            </summary>
        </member>
        <member name="M:NArrange.Core.ProjectHandler.#ctor(NArrange.Core.Configuration.ProjectHandlerConfiguration)">
            <summary>
            Creates a new ProjectHandler.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:NArrange.Core.ProjectHandler.Initialize">
            <summary>
            Initializes the extension handler.
            </summary>
        </member>
        <member name="P:NArrange.Core.ProjectHandler.Configuration">
            <summary>
            Gets the handler configuration used to create this ProjectHandler.
            </summary>
        </member>
        <member name="P:NArrange.Core.ProjectHandler.ProjectParser">
            <summary>
            Gets the project parser associated with the extension.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.LineSpacingConfiguration">
            <summary>
            Specifies line spacing style configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.LineSpacingConfiguration._removeConsecutiveBlankLines">
            <summary>
            Remove consecutive blank lines.
            </summary>
            <remarks>Default is false for backwards compatibility.</remarks>
        </member>
        <member name="M:NArrange.Core.Configuration.LineSpacingConfiguration.#ctor">
            <summary>
            Creates a new LineSpacingConfiguration instance.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.LineSpacingConfiguration.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.Configuration.LineSpacingConfiguration.ToString">
            <summary>
            Gets the string representation.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.LineSpacingConfiguration.RemoveConsecutiveBlankLines">
            <summary>
            Gets or sets a value indicating whether or not consecutive blank lines
            should be removed within members.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.InterfaceReference">
            <summary>
            Interface implementation definition for type and member references to interfaces and 
            interface members.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.InterfaceReference._name">
            <summary>
            Referenced interface name.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.InterfaceReference._referenceType">
            <summary>
            Reference type.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.InterfaceReference.#ctor">
            <summary>
            Creates a new InterfaceImplementation.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.InterfaceReference.#ctor(System.String,NArrange.Core.InterfaceReferenceType)">
            <summary>
            Creates a new InterfaceImplementation with the specified name and reference type.
            </summary>
            <param name="name">The interface name.</param>
            <param name="referenceType">Type of the reference.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.InterfaceReference.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.CodeElements.InterfaceReference.ToString">
            <summary>
            Gets the string representation of this object.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.InterfaceReference.Name">
            <summary>
            Gets or sets the referenced interface name.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.InterfaceReference.ReferenceType">
            <summary>
            Gets or sets the interface reference type.
            </summary>
        </member>
        <member name="T:NArrange.Core.SortedInserter">
            <summary>
            Sorted inserter.
            </summary>
        </member>
        <member name="T:NArrange.Core.IElementInserter">
            <summary>
            Performs insertion of an ICodeElement within the code tree.
            </summary>
        </member>
        <member name="M:NArrange.Core.IElementInserter.InsertElement(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Inserts the specified element.
            </summary>
            <param name="parentElement">Parent element to insert into.</param>
            <param name="codeElement">Code element to insert.</param>
        </member>
        <member name="F:NArrange.Core.SortedInserter._elementType">
            <summary>
            Element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.SortedInserter._sortBy">
            <summary>
            Sort configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.SortedInserter._comparer">
            <summary>
            Element comparer.
            </summary>
        </member>
        <member name="M:NArrange.Core.SortedInserter.#ctor(NArrange.Core.ElementType,NArrange.Core.Configuration.SortBy)">
            <summary>
            Creates a new sorted inserter using the specified sorting configuration.
            </summary>
            <param name="elementType">Type of the element.</param>
            <param name="sortBy">The sort by.</param>
        </member>
        <member name="M:NArrange.Core.SortedInserter.InsertElement(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Inserts an element into the parent using the strategy defined by the 
            sort configuration.
            </summary>
            <param name="parentElement">Parent element.</param>
            <param name="codeElement">Code element to insert.</param>
        </member>
        <member name="M:NArrange.Core.SortedInserter.CreateComparer(NArrange.Core.Configuration.SortBy)">
            <summary>
            Creates a comparer based on the sort configuration.
            </summary>
            <param name="sortBy">Sort configuration.</param>
            <returns>Comparer for two code elements.</returns>
        </member>
        <member name="T:NArrange.Core.ICodeElementParser">
            <summary>
            Interface for parsing NArrange code elements from 
            a source file stream.
            </summary>
        </member>
        <member name="M:NArrange.Core.ICodeElementParser.Parse(System.IO.TextReader)">
            <summary>
            Parses code elements from a stream.
            </summary>
            <param name="reader">Code file reader</param>
            <returns>A read-only collection of code elements.</returns>
        </member>
        <member name="P:NArrange.Core.ICodeElementParser.Configuration">
            <summary>
            Gets or sets the code configuration.
            </summary>
        </member>
        <member name="T:NArrange.Core.ICodeArranger">
            <summary>
            Interface for a code arranger.
            </summary>
        </member>
        <member name="M:NArrange.Core.ICodeArranger.Arrange(System.Collections.ObjectModel.ReadOnlyCollection{NArrange.Core.CodeElements.ICodeElement})">
            <summary>
            Arranges elements.
            </summary>
            <param name="originalElements">Original elements, this collection should not be modified</param>
            <returns>Collection of arranged elements.</returns>
        </member>
        <member name="T:NArrange.Core.ElementArranger">
            <summary>
            Standard IElementArranger implementation.
            </summary>
        </member>
        <member name="T:NArrange.Core.IElementArranger">
            <summary>
            Element arranger interface.
            </summary>
        </member>
        <member name="M:NArrange.Core.IElementArranger.ArrangeElement(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Arranges the specified element within the parent element.
            </summary>
            <param name="parentElement">The parent element.</param>
            <param name="codeElement">The code element.</param>
        </member>
        <member name="M:NArrange.Core.IElementArranger.CanArrange(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Determines whether or not this arranger can handle arrangement of
            the specified element.
            </summary>
            <param name="codeElement">The code element.</param>
            <returns>
            	<c>true</c> if this instance can arrange the specified code element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:NArrange.Core.IElementArranger.CanArrange(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Determines whether or not this arranger can handle arrangement of
            the specified element.
            </summary>
            <param name="parentElement">The parent element.</param>
            <param name="codeElement">The code element.</param>
            <returns>
            <c>true</c> if this instance can arrange the specified parent element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="F:NArrange.Core.ElementArranger._elementConfiguration">
            <summary>
            Element configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementArranger._parentConfiguration">
            <summary>
            Parent configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementArranger._childrenArranger">
            <summary>
            Arranger for children.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementArranger._filter">
            <summary>
            Element filter that elements must match to be arranged by this
            arranger.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementArranger._inserter">
            <summary>
            Inserter that controls how elements are inserted.
            </summary>
        </member>
        <member name="M:NArrange.Core.ElementArranger.#ctor(NArrange.Core.Configuration.ElementConfiguration,NArrange.Core.Configuration.ConfigurationElement)">
            <summary>
            Creates a new ElementArranger.
            </summary>
            <param name="elementConfiguration">Element configuration.</param>
            <param name="parentConfiguration">Parent configuration.</param>
        </member>
        <member name="M:NArrange.Core.ElementArranger.ArrangeElement(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Arranges the element in within the code tree represented in the specified
            builder.
            </summary>
            <param name="parentElement">The parent element.</param>
            <param name="codeElement">The code element.</param>
        </member>
        <member name="M:NArrange.Core.ElementArranger.CanArrange(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Determines whether or not the specified element can be arranged by
            this arranger.
            </summary>
            <param name="codeElement">The code element.</param>
            <returns>
            	<c>true</c> if this instance can arrange the specified code element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:NArrange.Core.ElementArranger.CanArrange(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Determines whether or not the specified element can be arranged by
            this arranger.
            </summary>
            <param name="parentElement">The parent element.</param>
            <param name="codeElement">The code element.</param>
            <returns>
            	<c>true</c> if this instance can arrange the specified parent element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:NArrange.Core.ElementArranger.CreateElementFilter(NArrange.Core.Configuration.FilterBy)">
            <summary>
            Creates an element filter.
            </summary>
            <param name="filterBy">The filter by.</param>
            <returns>An element filter.</returns>
        </member>
        <member name="M:NArrange.Core.ElementArranger.CreateElementInserter(NArrange.Core.ElementType,NArrange.Core.Configuration.SortBy,NArrange.Core.Configuration.GroupBy,NArrange.Core.Configuration.ConfigurationElement)">
            <summary>
            Creates an element inserter.
            </summary>
            <param name="elementType">Type of the element.</param>
            <param name="sortBy">The sort by.</param>
            <param name="groupBy">The group by.</param>
            <param name="parentConfiguration">The parent configuration.</param>
            <returns>An appropriate inserter.</returns>
        </member>
        <member name="M:NArrange.Core.ElementArranger.ArrangeChildElement(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Arranges the child element.
            </summary>
            <param name="codeElement">The code element.</param>
            <param name="childElement">The child element.</param>
        </member>
        <member name="M:NArrange.Core.ElementArranger.CorrectStaticFieldDependencies(NArrange.Core.CodeElements.TypeElement)">
            <summary>
            If dependent static fields exist, then correct their ordering regardless
            of arranging rules.
            </summary>
            <param name="typeElement">Type code element.</param>
        </member>
        <member name="M:NArrange.Core.ElementArranger.GetTypeStaticFields(NArrange.Core.CodeElements.TypeElement)">
            <summary>
            Gets all static fields for a Type.
            </summary>
            <param name="typeElement">Type element.</param>
            <returns>All static fields for the specified Type element.</returns>
        </member>
        <member name="T:NArrange.Core.ILogger">
            <summary>
            Logger interface.
            </summary>
        </member>
        <member name="M:NArrange.Core.ILogger.LogMessage(NArrange.Core.LogLevel,System.String,System.Object[])">
            <summary>
            Logs a message.
            </summary>
            <param name="level">Log level.</param>
            <param name="message">Log message.</param>
            <param name="args">Message arguments.</param>
        </member>
        <member name="T:NArrange.Core.ISolutionParser">
            <summary>
            Interface for specific solution parser implementations.
            </summary>
        </member>
        <member name="M:NArrange.Core.ISolutionParser.Parse(System.String)">
            <summary>
            Parses project file names from a solution file.
            </summary>
            <param name="solutionFile">Solution file name.</param>
            <returns>A list of project file names</returns>
        </member>
        <member name="P:NArrange.Core.ISolutionParser.Extensions">
            <summary>
            Gets the extensions for files that the solution parser supports.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.GroupBy">
            <summary>
            Specifies element grouping (used to group elements with line 
            separation in between)
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.GroupBy._by">
            <summary>
            The element attribute to group by.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.GroupBy._customSeparator">
            <summary>
            Custom separator text.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.GroupBy._direction">
            <summary>
            The sort direction for groups.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.GroupBy._matchCapture">
            <summary>
            The regular expression text, if any, to be used to capture only a portion of the 
            attribute.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.GroupBy._separatorType">
            <summary>
            Separator type between elements.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.GroupBy.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.Configuration.GroupBy.ToString">
            <summary>
            Gets the string representation.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.GroupBy.AttributeCapture">
            <summary>
            Gets or sets the regular expression that specifies which portion
            of the element attribute should be used for grouping.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.GroupBy.By">
            <summary>
            Gets or sets the attribute elements should be grouped by.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.GroupBy.CustomSeparator">
            <summary>
            Gets or sets the custom separator string.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.GroupBy.Direction">
            <summary>
            Gets or sets the sort direction.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.GroupBy.InnerGroupBy">
            <summary>
            Gets or sets the inner grouping specification.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.GroupBy.SeparatorType">
            <summary>
            Gets or sets the separator type.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.FileAttributeExpression">
            <summary>
            File attribute expression.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.LeafExpression">
            <summary>
            Element leaf expression base class.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.IConditionExpression">
            <summary>
            Interface for a filter expression.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.IConditionExpression.Left">
            <summary>
            Gets the left expression.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.IConditionExpression.Right">
            <summary>
            Gets the right expression.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.LeafExpression.NArrange#Core#Configuration#IConditionExpression#Left">
            <summary>
            Gets the left expression.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.LeafExpression.NArrange#Core#Configuration#IConditionExpression#Right">
            <summary>
            Gets the right expression.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.FileAttributeExpression._fileAttributeType">
            <summary>
            The file attribute.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.FileAttributeExpression.#ctor(NArrange.Core.FileAttributeType)">
            <summary>
            Creates a new element attribute expression.
            </summary>
            <param name="fileAttribute">The file attribute.</param>
        </member>
        <member name="M:NArrange.Core.Configuration.FileAttributeExpression.ToString">
            <summary>
            Gets the string representation of this expression.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.FileAttributeExpression.FileAttribute">
            <summary>
            Gets the file attribute specified by the expression.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeParser">
            <summary>
            Base code parser implementation.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeParser.DefaultBlockLength">
            <summary>
            Default block length (for instantiating string builders)
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeParser.DefaultWordLength">
            <summary>
            Default word length (for instantiating string builders)
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeParser.EmptyChar">
            <summary>
            Empty character.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeParser.WhiteSpaceCharacters">
            <summary>
            Whitepace characters.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeParser._charBuffer">
            <summary>
            Buffer for reading a character.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeParser._configuration">
            <summary>
            Code configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeParser._currCh">
            <summary>
            Current character.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeParser._lineNumber">
            <summary>
            Current line number.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeParser._position">
            <summary>
            Current line character position.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeParser._prevCh">
            <summary>
            Previous character.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeParser._reader">
            <summary>
            Input text reader.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeParser._regexCache">
            <summary>
            Regular expression cache.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeParser.IsWhiteSpace(System.Char)">
            <summary>
            Determines whether or not the specified character is whitespace.
            </summary>
            <param name="character">Character to test.</param>
            <returns>True if the character is whitespace, otherwise false.</returns>
        </member>
        <member name="M:NArrange.Core.CodeParser.Parse(System.IO.TextReader)">
            <summary>
            Parses a collection of code elements from a stream reader.
            </summary>
            <param name="reader">Code stream reader</param>
            <returns>A collection of parsed code elements.</returns>
        </member>
        <member name="M:NArrange.Core.CodeParser.ApplyCommentsAndAttributes(NArrange.Core.CodeElements.CodeElement,System.Collections.ObjectModel.ReadOnlyCollection{NArrange.Core.CodeElements.ICommentElement},System.Collections.ObjectModel.ReadOnlyCollection{NArrange.Core.CodeElements.AttributeElement})">
            <summary>
            Applies attributes and comments to a code element.
            </summary>
            <param name="codeElement">Code element to apply to.</param>
            <param name="comments">Comments to apply.</param>
            <param name="attributes">Attributes to apply.</param>
        </member>
        <member name="M:NArrange.Core.CodeParser.DoParseElements">
            <summary>
            Parses elements from the current point in the stream.
            </summary>
            <returns>List of parsed code elements.</returns>
        </member>
        <member name="M:NArrange.Core.CodeParser.EatChar(System.Char)">
            <summary>
            Eats the specified character.
            </summary>
            <param name="character">Character to eat.</param>
        </member>
        <member name="M:NArrange.Core.CodeParser.EatWhiteSpace">
            <summary>
            Reads until the next non-whitespace character is reached.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeParser.EatWhiteSpace(NArrange.Core.WhiteSpaceTypes)">
            <summary>
            Reads until the next non-whitespace character is reached.
            </summary>
            <param name="whiteSpaceType">Whitespace type flags.</param>
        </member>
        <member name="M:NArrange.Core.CodeParser.GetCommentDirectiveText(NArrange.Core.CodeElements.CommentElement,System.String,System.String)">
            <summary>
            Gets text from a comment directive, if present.
            </summary>
            <param name="comment">Comment element containing the directive.</param>
            <param name="pattern">Regular expression pattern.</param>
            <param name="group">Group key for the text to retrieve.</param>
            <returns>Text for the comment directive.</returns>
        </member>
        <member name="M:NArrange.Core.CodeParser.OnParseError(System.String)">
            <summary>
            Throws a parse error 
            </summary>
            <param name="message">Parse error message.</param>
        </member>
        <member name="M:NArrange.Core.CodeParser.ReadLine">
            <summary>
            Reads the current line. Does not update PreviousChar.
            </summary>
            <returns>The line read.</returns>
        </member>
        <member name="M:NArrange.Core.CodeParser.TryReadChar(System.Char)">
            <summary>
            Tries to read the specified character from the stream and update
            the CurrentChar property.
            </summary>
            <param name="character">Character to read.</param>
            <returns>True if the character was read, otherwise false.</returns>
        </member>
        <member name="M:NArrange.Core.CodeParser.TryReadChar">
            <summary>
            Tries to read any character from the stream and places it in the
            CurrentChar property.
            </summary>
            <returns>True if a character was read, otherwise false.</returns>
        </member>
        <member name="M:NArrange.Core.CodeParser.Reset">
            <summary>
            Reset the parser to a state to handle parsing another input.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeParser.Configuration">
            <summary>
            Gets or sets the code configuration.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeParser.CurrentChar">
            <summary>
            Gets the most recently read character.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeParser.NextChar">
            <summary>
            Gets the next character in the stream, if any.
            </summary>
            <returns>Next character, if none then EmptyChar.</returns>
        </member>
        <member name="P:NArrange.Core.CodeParser.PreviousChar">
            <summary>
            Gets the previously read character (i.e. before CurrentChar)
            </summary>
        </member>
        <member name="T:NArrange.Core.ZipUtilities">
            <summary>
            Utility methods for zipping and unzipping files.
            </summary>
        </member>
        <member name="M:NArrange.Core.ZipUtilities.Unzip(System.String,System.String)">
            <summary>
            Unzips the specified zip file to the destination directory.
            </summary>
            <param name="zipFileName">Zip file name.</param>
            <param name="targetDirectory">Target extraction directory.</param>
        </member>
        <member name="M:NArrange.Core.ZipUtilities.Zip(System.String,System.String)">
            <summary>
            Writes the specified directory to a new zip file.
            </summary>
            <param name="sourceDirectory">Directory with files to add.</param>
            <param name="zipFileName">Output file name.</param>
        </member>
        <member name="T:NArrange.Core.FileArranger">
            <summary>
            Class for arranging source code files.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger._configFile">
            <summary>
            Configuration file name supplied.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger._logger">
            <summary>
            Logger to write messages to.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger._arrangeResults">
            <summary>
            Arrange results.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger._codeArranger">
            <summary>
            The code arranger for arranging source files.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger._configuration">
            <summary>
            Code configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger._encoding">
            <summary>
            Default file encoding.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger._filesParsed">
            <summary>
            Number of files parsed.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger._filesWritten">
            <summary>
            Number of files written.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger._projectManager">
            <summary>
            Project manager for retrieving solution/project/directory source files
            and the parsers associated with those files.
            </summary>
        </member>
        <member name="M:NArrange.Core.FileArranger.#ctor(System.String,NArrange.Core.ILogger)">
            <summary>
            Creates a new file arranger.
            </summary>
            <param name="configFile">The config file.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:NArrange.Core.FileArranger.Arrange(System.String,System.String)">
            <summary>
            Arranges a file, project or solution.
            </summary>
            <param name="inputFile">The input file.</param>
            <param name="outputFile">The output file.</param>
            <returns>True if succesful, otherwise false.</returns>
        </member>
        <member name="M:NArrange.Core.FileArranger.Arrange(System.String,System.String,System.Boolean)">
            <summary>
            Arranges a file, project or solution.
            </summary>
            <param name="inputFile">The input file.</param>
            <param name="outputFile">The output file.</param>
            <param name="backup">Whether or not to create a backup.</param>
            <returns>True if succesful, otherwise false.</returns>
        </member>
        <member name="M:NArrange.Core.FileArranger.GetConfigurationLoadError(System.String,System.Exception)">
            <summary>
            Gets a configuration load error.
            </summary>
            <param name="filename">The filename.</param>
            <param name="ex">The exception.</param>
            <returns>The configuration load error text.</returns>
        </member>
        <member name="M:NArrange.Core.FileArranger.ArrangeElements(System.Collections.ObjectModel.ReadOnlyCollection{NArrange.Core.CodeElements.ICodeElement})">
            <summary>
            Arranges code elements.
            </summary>
            <param name="elements">The elements.</param>
            <returns>Collection of arranged elements.</returns>
        </member>
        <member name="M:NArrange.Core.FileArranger.ArrangeSourceFile(System.String,System.String)">
            <summary>
            Arranges an individual source file.
            </summary>
            <param name="inputFile">The input file.</param>
            <param name="outputFile">The output file.</param>
        </member>
        <member name="M:NArrange.Core.FileArranger.ArrangeSource(System.String,System.String)">
            <summary>
            Arranges an individual source file.
            </summary>
        </member>
        <member name="M:NArrange.Core.FileArranger.Initialize">
            <summary>
            Initializes this instance.
            </summary>
            <returns>True if succesful, otherwise false.</returns>
        </member>
        <member name="M:NArrange.Core.FileArranger.LoadConfiguration(System.String)">
            <summary>
            Loads the configuration file that specifies how elements will be arranged.
            </summary>
            <param name="configFile">The config file.</param>
        </member>
        <member name="M:NArrange.Core.FileArranger.LogMessage(NArrange.Core.LogLevel,System.String,System.Object[])">
            <summary>
            Log a message.
            </summary>
            <param name="level">The level.</param>
            <param name="message">The message or message format.</param>
            <param name="args">The message format args.</param>
        </member>
        <member name="M:NArrange.Core.FileArranger.WriteFile(NArrange.Core.FileArranger.ArrangeResult)">
            <summary>
            Writes a source file.
            </summary>
            <param name="arrangeResult">The arrange result.</param>
            <returns>True if succesful, otherwise false.</returns>
        </member>
        <member name="M:NArrange.Core.FileArranger.WriteFiles(System.String,System.Boolean)">
            <summary>
            Writes the files.
            </summary>
            <param name="inputFile">The input file.</param>
            <param name="backup">Whether or not a backup should be written.</param>
            <returns>True if succesful, otherwise false.</returns>
        </member>
        <member name="T:NArrange.Core.FileArranger.ArrangeResult">
            <summary>
            Arrange result.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger.ArrangeResult._encoding">
            <summary>
            Encoding to use when writing the file.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger.ArrangeResult._inputFile">
            <summary>
            Input file name.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger.ArrangeResult._modified">
            <summary>
            Whether or not the file was modified after arranging.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger.ArrangeResult._outputFile">
            <summary>
            Output file name.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileArranger.ArrangeResult._outputFileText">
            <summary>
            Output file text.
            </summary>
        </member>
        <member name="M:NArrange.Core.FileArranger.ArrangeResult.#ctor(System.Text.Encoding,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new ArrangeResult.
            </summary>
            <param name="encoding">Encoding to use for writing.</param>
            <param name="inputFile">Input file name.</param>
            <param name="inputFileText">Input file text.</param>
            <param name="outputFile">Output file name.</param>
            <param name="outputFileText">Output file text.</param>
        </member>
        <member name="P:NArrange.Core.FileArranger.ArrangeResult.Encoding">
            <summary>
            Gets the encoding to use for writing.
            </summary>
        </member>
        <member name="P:NArrange.Core.FileArranger.ArrangeResult.Modified">
            <summary>
            Gets a value indicating whether or not the file contents were modified.
            </summary>
        </member>
        <member name="P:NArrange.Core.FileArranger.ArrangeResult.OutputFile">
            <summary>
            Gets the output file name.
            </summary>
        </member>
        <member name="P:NArrange.Core.FileArranger.ArrangeResult.OutputFileText">
            <summary>
            Gets the output file text.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.ElementAttributeExpression">
            <summary>
            Element attribute expression.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ElementAttributeExpression._elementAttributeType">
            <summary>
            Attribute type.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ElementAttributeExpression._elementScope">
            <summary>
            Attribute scope.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.ElementAttributeExpression.#ctor(NArrange.Core.ElementAttributeType)">
            <summary>
            Creates a new element attribute expression.
            </summary>
            <param name="elementAttribute">The element attribute.</param>
        </member>
        <member name="M:NArrange.Core.Configuration.ElementAttributeExpression.#ctor(NArrange.Core.ElementAttributeType,NArrange.Core.ElementAttributeScope)">
            <summary>
            Creates a new element attribute expression.
            </summary>
            <param name="elementAttribute">The element attribute.</param>
            <param name="scope">The scope.</param>
        </member>
        <member name="M:NArrange.Core.Configuration.ElementAttributeExpression.ToString">
            <summary>
            Gets the string representation of this expression.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.ElementAttributeExpression.ElementAttribute">
            <summary>
            Gets the element attribute specified by the expression.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.ElementAttributeExpression.Scope">
            <summary>
            Gets the element scope specified by the expression.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.CommentElement">
            <summary>
            Comment line implementation.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.ICommentElement">
            <summary>
            Interface for comments.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.ICommentElement.Text">
            <summary>
            Gets the comment text.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.ICommentElement.Type">
            <summary>
            Gets the type of comment.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.CommentElement._commentType">
            <summary>
            Comment type (e.g. line or XML).
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.CommentElement._text">
            <summary>
            The comment text.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.CommentElement.#ctor">
            <summary>
            Creates a new comment line.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.CommentElement.#ctor(System.String)">
            <summary>
            Creates a new comment line.
            </summary>
            <param name="text">Comment text</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.CommentElement.#ctor(NArrange.Core.CommentType)">
            <summary>
            Creates a new comment line.
            </summary>
            <param name="commentType">Whether or not this is an XML comment or block comment</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.CommentElement.#ctor(System.String,NArrange.Core.CommentType)">
            <summary>
            Creates a new comment line.
            </summary>
            <param name="text">Comment text</param>
            <param name="commentType">Whether or not this is an XML comment or block comment</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.CommentElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <param name="visitor">Visitor to accept the code element.</param>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
        </member>
        <member name="M:NArrange.Core.CodeElements.CommentElement.ToString">
            <summary>
            Gets the string representation of this object.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:NArrange.Core.CodeElements.CommentElement.DoClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone of the code element.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.CommentElement.ElementType">
            <summary>
            Gets the code element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.CommentElement.Text">
            <summary>
            Gets the comment text.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.CommentElement.Type">
            <summary>
            Gets the type of the comment.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.ConstructorElement">
            <summary>
            Constructor element.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.ConstructorElement._params">
            <summary>
            Constructor parameters.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.ConstructorElement._reference">
            <summary>
            Referenced constructor name (e.g. this or base).
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.ConstructorElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
            <param name="visitor">Visitor to accept the element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ConstructorElement.DoMemberClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone with the member element state copied.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.ConstructorElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.ConstructorElement.Parameters">
            <summary>
            Gets or sets the parameter list 
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.ConstructorElement.Reference">
            <summary>
            Gets or sets the base/class constructor reference.
            </summary>
        </member>
        <member name="T:NArrange.Core.ChainElementArranger">
            <summary>
            Uses the chain of responsibility pattern to arrange an element using
            the provided ArrangedCodeBuilder.
            </summary>
        </member>
        <member name="F:NArrange.Core.ChainElementArranger._arrangers">
            <summary>
            Collection of child arrangers.
            </summary>
        </member>
        <member name="M:NArrange.Core.ChainElementArranger.#ctor">
            <summary>
            Creates a new element arranger chain.
            </summary>
        </member>
        <member name="M:NArrange.Core.ChainElementArranger.AddArranger(NArrange.Core.IElementArranger)">
            <summary>
            Adds an arranger to the responsibility chain.
            </summary>
            <param name="arranger">Child arranger to add.</param>
        </member>
        <member name="M:NArrange.Core.ChainElementArranger.ArrangeElement(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Arranges an element, delegating the responsibility to the first arranger
            encountered who can process the request.
            </summary>
            <param name="parentElement">Parent code element.</param>
            <param name="codeElement">Code element to arrange.</param>
        </member>
        <member name="M:NArrange.Core.ChainElementArranger.CanArrange(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Determines if the specified code element can be arranged by
            any arranger in the chain.
            </summary>
            <param name="codeElement">Code element to check.</param>
            <returns>
            A boolean value indicating whether or not the specified element
            can be arranged by this arranger.
            </returns>
        </member>
        <member name="M:NArrange.Core.ChainElementArranger.CanArrange(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Determines if the specified code element can be arranged by
            any arranger in the chain.
            </summary>
            <param name="parentElement">Parent code element.</param>
            <param name="codeElement">Code element to check.</param>
            <returns>
            A boolean value indicating whether or not this arranger can 
            arrange the code element.
            </returns>
        </member>
        <member name="T:NArrange.Core.CodeElements.ElementUtilities">
            <summary>
            Element utility methods.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.ElementUtilities.Format(System.String,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Gets a string representation of a code element using the specified
            format.
            </summary>
            <param name="format">The format.</param>
            <param name="codeElement">The code element.</param>
            <returns>Formatted string representation of the code element.</returns>
        </member>
        <member name="M:NArrange.Core.CodeElements.ElementUtilities.GetAttribute(NArrange.Core.ElementAttributeType,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Gets the string representation of a code element attribute.
            </summary>
            <param name="attributeType">Type of the attribute.</param>
            <param name="codeElement">The code element.</param>
            <returns>The code element attribute as text.</returns>
        </member>
        <member name="M:NArrange.Core.CodeElements.ElementUtilities.ProcessElementTree(NArrange.Core.CodeElements.ICodeElement,System.Action{NArrange.Core.CodeElements.ICodeElement})">
            <summary>
            Processes each element in a code element tree.
            </summary>
            <param name="codeElement">Code element to process.</param>
            <param name="action">Action that performs processing.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ElementUtilities.GetAttributesAttribute(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Gets the Attributes attribute.
            </summary>
            <param name="codeElement">The code element.</param>
            <returns>Attributes as a comma-separated list.</returns>
        </member>
        <member name="M:NArrange.Core.CodeElements.ElementUtilities.GetTypeAttribute(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Gets the type attribute.
            </summary>
            <param name="codeElement">The code element.</param>
            <returns>The type attibute as text.</returns>
        </member>
        <member name="T:NArrange.Core.IProjectParser">
            <summary>
            Interface for parsing individual fileNames from a project.
            </summary>
        </member>
        <member name="M:NArrange.Core.IProjectParser.Parse(System.String)">
            <summary>
            Parses source file names from a project file.
            </summary>
            <param name="projectFile">Project file name.</param>
            <returns>A list of source code fileNames.</returns>
        </member>
        <member name="T:NArrange.Core.Configuration.ProjectHandlerConfiguration">
            <summary>
            Specifies project extensions.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.HandlerConfiguration">
            <summary>
            Base class for handler configuration information.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.HandlerConfiguration._assembly">
            <summary>
            Assembly name.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.HandlerConfiguration.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.Configuration.HandlerConfiguration.DoClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone of the instance.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.HandlerConfiguration.AssemblyName">
            <summary>
            Gets or sets the extension handler assembly.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.HandlerConfiguration.HandlerType">
            <summary>
            Gets the handler type.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ProjectHandlerConfiguration._parserType">
            <summary>
            Parser Type name within the assembly.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ProjectHandlerConfiguration._projectExtensions">
            <summary>
            Project extension configurations.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.ProjectHandlerConfiguration.ToString">
            <summary>
            Gets the string representation.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.ProjectHandlerConfiguration.DoClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone of the instance.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.ProjectHandlerConfiguration.HandlerType">
            <summary>
            Gets the handler type.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.ProjectHandlerConfiguration.ParserType">
            <summary>
            Gets or sets the parser Type..
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.ProjectHandlerConfiguration.ProjectExtensions">
            <summary>
            Gets the list of project extension configurations.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.UsingElement">
            <summary>
            Represents a using/import statement within code.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.UsingElement._isMovable">
            <summary>
            Whether or not this using element can be moved between code levels.
            This should be determined by the language parser.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.UsingElement._redefine">
            <summary>
            Import redefine.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.UsingElement.#ctor">
            <summary>
            Creates a new Using directive code element.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.UsingElement.#ctor(System.String)">
            <summary>
            Creates a new Using directive code element.
            </summary>
            <param name="name">Namespace or type name.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.UsingElement.#ctor(System.String,System.String)">
            <summary>
            Creates a new Using directive code element.
            </summary>
            <param name="name">Namespace or type name.</param>
            <param name="redefine">Redefined type or namespace.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.UsingElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
            <param name="visitor">The visitory that will accept the element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.UsingElement.DoClone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of the code element.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.UsingElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.UsingElement.IsMovable">
            <summary>
            Gets or sets a value indicating whether or not this using element 
            can be moved between code levels (e.g. file or namespace) as 
            determined by the language parser.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.UsingElement.Redefine">
            <summary>
            Gets or sets the namespace to be redefined to the name of this 
            UsingElement.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.UsingElement.Type">
            <summary>
            Gets the type of the using statement.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.DelegateElement">
            <summary>
            Delegate element.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.DelegateElement._typeParametersLock">
            <summary>
            Type parameters synchronization lock.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.DelegateElement._params">
            <summary>
            Parameters as a comma-separated list.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.DelegateElement._typeParameters">
            <summary>
            Generic type parameters list.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.DelegateElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <param name="visitor">Visitor to accept the code element.</param>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
        </member>
        <member name="M:NArrange.Core.CodeElements.DelegateElement.AddTypeParameter(NArrange.Core.CodeElements.TypeParameter)">
            <summary>
            Adds a type parameter to the type parameter list.
            </summary>
            <param name="typeParameter">The type parameter.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.DelegateElement.DoMemberClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone of the instance with the member element state copied.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.DelegateElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.DelegateElement.Parameters">
            <summary>
            Gets or sets the parameter list 
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.DelegateElement.TypeParameters">
            <summary>
            Gets the list of type parameters.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.DelegateElement.TypeParametersBase">
            <summary>
            Gets the list of type parameters.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.AttributeElement">
            <summary>
            Attribute code element.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.IAttributeElement">
            <summary>
            Interface for attribute code elements.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.IAttributeElement.BodyText">
            <summary>
            Gets the body text.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.IAttributeElement.Target">
            <summary>
            Gets the attribute target.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.AttributeElement._parent">
            <summary>
            Parent element.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.AttributeElement._target">
            <summary>
            Target or scope.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.AttributeElement.#ctor">
            <summary>
            Creates a new attribute element.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.AttributeElement.#ctor(System.String)">
            <summary>
            Creates a new attribute element with the specified name.
            </summary>
            <param name="name">Attribute name.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.AttributeElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
            <param name="visitor">Code element visitor.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.AttributeElement.DoClone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A clone of the code element.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.AttributeElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.AttributeElement.Parent">
            <summary>
            Gets or sets the parent element.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.AttributeElement.Target">
            <summary>
            Gets or sets the attribute target. 
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeWriter">
            <summary>
            Base class for writing code elements to a file.
            </summary>
        </member>
        <member name="T:NArrange.Core.ICodeElementWriter">
            <summary>
            Interface for writing NArrange code elements to 
            a source file stream.
            </summary>
        </member>
        <member name="M:NArrange.Core.ICodeElementWriter.Write(System.Collections.ObjectModel.ReadOnlyCollection{NArrange.Core.CodeElements.ICodeElement},System.IO.TextWriter)">
            <summary>
            Writes code elements to a stream.
            </summary>
            <param name="codeElements">Read only collection of elements</param>
            <param name="writer">Code file writer</param>
        </member>
        <member name="P:NArrange.Core.ICodeElementWriter.Configuration">
            <summary>
            Gets or sets the code configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeWriter._configuration">
            <summary>
            Code configuration.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeWriter.WriteVisitElements(System.Collections.ObjectModel.ReadOnlyCollection{NArrange.Core.CodeElements.ICodeElement},System.IO.TextWriter,NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Writes each element using the specified visitor.
            </summary>
            <param name="codeElements">The code elements.</param>
            <param name="writer">The writer.</param>
            <param name="visitor">The visitor.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriter.Write(System.Collections.ObjectModel.ReadOnlyCollection{NArrange.Core.CodeElements.ICodeElement},System.IO.TextWriter)">
            <summary>
            Writes code elements to the specified text writer.
            </summary>
            <param name="codeElements">Read only collection of elements</param>
            <param name="writer">Code file writer</param>
        </member>
        <member name="M:NArrange.Core.CodeWriter.DoWriteElements(System.Collections.ObjectModel.ReadOnlyCollection{NArrange.Core.CodeElements.ICodeElement},System.IO.TextWriter)">
            <summary>
            Template method for inheritors to write a collection of code elements to the
            specified text writer.
            </summary>
            <param name="codeElements">The code elements.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="P:NArrange.Core.CodeWriter.Configuration">
            <summary>
            Gets or sets the code configuration.
            </summary>
        </member>
        <member name="T:NArrange.Core.ParseException">
            <summary>
            Exception thrown by parsers.
            </summary>
        </member>
        <member name="F:NArrange.Core.ParseException._column">
            <summary>
            Character position at which the error occurred.
            </summary>
        </member>
        <member name="F:NArrange.Core.ParseException._lineNumber">
            <summary>
            Line number at which the error occurred.
            </summary>
        </member>
        <member name="M:NArrange.Core.ParseException.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Creates a new ParseException.
            </summary>
            <param name="message">Message text.</param>
            <param name="lineNumber">Line number.</param>
            <param name="column">Line position.</param>
        </member>
        <member name="P:NArrange.Core.ParseException.Column">
            <summary>
            Gets the character position of the parse error.
            </summary>
        </member>
        <member name="P:NArrange.Core.ParseException.LineNumber">
            <summary>
            Gets the line number.
            </summary>
        </member>
        <member name="P:NArrange.Core.ParseException.Message">
            <summary>
            Gets the exception message.
            </summary>
        </member>
        <member name="T:NArrange.Core.IElementFilter">
            <summary>
            Class for determining if an element meets specific
            filter criteria.
            </summary>
        </member>
        <member name="M:NArrange.Core.IElementFilter.IsMatch(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Determines whether or not the specified code element matches the
            filter criteria.
            </summary>
            <param name="codeElement">Code element to analyze.</param>
            <returns>True if the elemet matches the filter, otherwise false.</returns>
        </member>
        <member name="P:NArrange.Core.IElementFilter.RequiredScope">
            <summary>
            Gets the required scope information for evaluating the condition.
            </summary>
        </member>
        <member name="T:NArrange.Core.DefaultElementInserter">
            <summary>
            Inserts an element in the code arrangement.
            </summary>
        </member>
        <member name="M:NArrange.Core.DefaultElementInserter.InsertElement(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Inserts the element in the code arrangement.
            </summary>
            <param name="parentElement">Parent element to insert into.</param>
            <param name="codeElement">Code element to insert.</param>
        </member>
        <member name="T:NArrange.Core.MSBuildProjectParser">
            <summary>
            Parses an individual MSBuild project (e.g. .csproj, .vbproj) for 
            individual source file names.
            </summary>
        </member>
        <member name="M:NArrange.Core.MSBuildProjectParser.Parse(System.String)">
            <summary>
            Parses source file names from a project file.
            </summary>
            <param name="projectFile">Project file name.</param>
            <returns>A list of source code filenames</returns>
        </member>
        <member name="T:NArrange.Core.Configuration.StringExpression">
            <summary>
            String expression.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.StringExpression._text">
            <summary>
            The text of the string expression.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.StringExpression.#ctor(System.String)">
            <summary>
            Creates a new string expression.
            </summary>
            <param name="text">The text of the expression.</param>
        </member>
        <member name="M:NArrange.Core.Configuration.StringExpression.ToString">
            <summary>
            Gets the string representation of this expression.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.StringExpression.Text">
            <summary>
            Gets the expression text.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.ConditionExpressionParser">
            <summary>
            Class for parsing filter expressions.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ConditionExpressionParser.ExpressionEnd">
            <summary>
            Expression end.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ConditionExpressionParser.ExpressionPrefix">
            <summary>
            Character that marks the start of an attribute expression.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ConditionExpressionParser.ExpressionStart">
            <summary>
            Expression start.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ConditionExpressionParser.FileAttributeScope">
            <summary>
            File attribute scope.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ConditionExpressionParser.ScopeSeparator">
            <summary>
            Scope separator.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ConditionExpressionParser._instanceLock">
            <summary>
            Singleton sych lock.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ConditionExpressionParser._instance">
            <summary>
            Singleton instance field.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.ConditionExpressionParser.#ctor">
            <summary>
            Creates a new FilterExpressionParser.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.ConditionExpressionParser.Parse(System.String)">
            <summary>
            Parses and expression to an expression tree.
            </summary>
            <param name="expression">Condition expression text.</param>
            <returns>A condition expression instance.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.ConditionExpressionParser.AssembleExpressionTree(System.Collections.ObjectModel.ReadOnlyCollection{NArrange.Core.Configuration.IConditionExpression},System.String)">
            <summary>
            Takes in a list of expressions and operator expression placeholders and
            builds an expression tree node.
            </summary>
            <param name="originalNodes">Original nodes.</param>
            <param name="originalExpression">Original expression.</param>
            <returns>A condition expression.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.ConditionExpressionParser.CheckForInvalidOperator(System.String,System.Text.StringBuilder)">
            <summary>
            Checks for invalid operator.
            </summary>
            <param name="expression">The expression.</param>
            <param name="expressionBuilder">The expression builder.</param>
        </member>
        <member name="M:NArrange.Core.Configuration.ConditionExpressionParser.OnInvalidExpression(System.String)">
            <summary>
            Called when an invalid expression is encountered.
            </summary>
            <param name="expression">Invalid expression text.</param>
        </member>
        <member name="M:NArrange.Core.Configuration.ConditionExpressionParser.OnInvalidExpression(System.String,System.String,System.Object[])">
            <summary>
            Called when an invalid expression is encountered.
            </summary>
            <param name="expression">Invalid expression text.</param>
            <param name="message">Message or message format.</param>
            <param name="args">Message arguments.</param>
        </member>
        <member name="P:NArrange.Core.Configuration.ConditionExpressionParser.Instance">
            <summary>
            Gets the single instance of the expression parser.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.ConditionExpressionParser.OperatorExpressionPlaceholder">
            <summary>
            Operator expression.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ConditionExpressionParser.OperatorExpressionPlaceholder._operatorType">
            <summary>
            Operator type.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.ConditionExpressionParser.OperatorExpressionPlaceholder.#ctor(NArrange.Core.BinaryExpressionOperator)">
            <summary>
            Creates a new operator expression.
            </summary>
            <param name="operatorType">Binary expression operator type.</param>
        </member>
        <member name="P:NArrange.Core.Configuration.ConditionExpressionParser.OperatorExpressionPlaceholder.Operator">
            <summary>
            Gets the expression operator.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.UnaryOperatorExpression">
            <summary>
            Unary operator expression.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.UnaryOperatorExpression._innerExpression">
            <summary>
            Inner expression.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.UnaryOperatorExpression._operatorType">
            <summary>
            Operator type.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.UnaryOperatorExpression.#ctor(NArrange.Core.UnaryExpressionOperator,NArrange.Core.Configuration.IConditionExpression)">
            <summary>
            Creates a new unary operator expression.
            </summary>
            <param name="operatorType">Type of the operator.</param>
            <param name="innerExpression">The inner expression.</param>
        </member>
        <member name="M:NArrange.Core.Configuration.UnaryOperatorExpression.ToString">
            <summary>
            Gets the string representation of this expression.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.UnaryOperatorExpression.InnerExpression">
            <summary>
            Gets the inner expression.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.UnaryOperatorExpression.Operator">
            <summary>
            Gets the expression operator.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.UnaryOperatorExpression.NArrange#Core#Configuration#IConditionExpression#Left">
            <summary>
            Gets the left expression.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.UnaryOperatorExpression.NArrange#Core#Configuration#IConditionExpression#Right">
            <summary>
            Gets the right expression.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.EncodingConfiguration">
            <summary>
            Specifies encoding configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.EncodingConfiguration.DefaultCodePage">
            <summary>
            CodePage value to indicate the system ANSI default.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.EncodingConfiguration.DetectCodePage">
            <summary>
            CodePage value to indicate auto-detection.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.EncodingConfiguration._codePage">
            <summary>
            The code page configuration value.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.EncodingConfiguration.#ctor">
            <summary>
            Creates a new EncodingConfiguration instance.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.EncodingConfiguration.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.Configuration.EncodingConfiguration.GetEncoding">
            <summary>
            Gets the encoding (null if Detect) specified by the configuration.
            </summary>
            <returns>The configured encoding if specified, otherwise null.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.EncodingConfiguration.ToString">
            <summary>
            Gets the string representation of this instance.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.EncodingConfiguration.CodePage">
            <summary>
            Gets or sets the CodePage.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeArranger">
            <summary>
            Code arranger.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeArranger._codeArrangeChainLock">
            <summary>
            Arranger chain collection synch lock.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeArranger._configuration">
            <summary>
            Code configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeArranger._elementArrangerChain">
            <summary>
            Arranger chain collection.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeArranger.#ctor(NArrange.Core.Configuration.CodeConfiguration)">
            <summary>
            Creates a new code arranger with the specified configuration.
            </summary>
            <param name="configuration">Configuration to use for arranging code members.</param>
        </member>
        <member name="M:NArrange.Core.CodeArranger.Arrange(System.Collections.ObjectModel.ReadOnlyCollection{NArrange.Core.CodeElements.ICodeElement})">
            <summary>
            Arranges the code elements according to the configuration supplied 
            in the constructor.
            </summary>
            <param name="originalElements">Original elements</param>
            <returns>An arranged collection of code elements.</returns>
        </member>
        <member name="M:NArrange.Core.CodeArranger.MoveUsings(System.Collections.Generic.List{NArrange.Core.CodeElements.ICodeElement},NArrange.Core.CodeElements.NamespaceElement)">
            <summary>
            Moves using directives if configured to do so.
            </summary>
            <param name="elements">List of top-level code elements.</param>
            <param name="namespaceElement">Namespace namespace to use when moving usings.</param>
        </member>
        <member name="P:NArrange.Core.CodeArranger.ArrangerChain">
            <summary>
            Gets the arranger chain.
            </summary>
        </member>
        <member name="T:NArrange.Core.MSBuildSolutionParser">
            <summary>
            MSBuild solution file parser.
            </summary>
        </member>
        <member name="F:NArrange.Core.MSBuildSolutionParser._extensions">
            <summary>
            File extensions handled by this solution parser.
            </summary>
        </member>
        <member name="M:NArrange.Core.MSBuildSolutionParser.Parse(System.String)">
            <summary>
            Parses project file names from a solution file.
            </summary>
            <param name="solutionFile">Solution file name.</param>
            <returns>A list of project file names</returns>
        </member>
        <member name="P:NArrange.Core.MSBuildSolutionParser.Extensions">
            <summary>
            Gets a list of extensions supported by this solution parser.
            </summary>
        </member>
        <member name="T:NArrange.Core.MonoUtilities">
            <summary>
            Utilities for working with the Mono runtime.
            </summary>
        </member>
        <member name="F:NArrange.Core.MonoUtilities._monoRuntime">
            <summary>
            Whether or not the process is running under the Mono runtime.
            </summary>
        </member>
        <member name="P:NArrange.Core.MonoUtilities.IsMonoRuntime">
            <summary>
            Gets a value indicating whether or not the current process
            is running under the Mono runtime.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.ElementConfiguration">
            <summary>
            Element configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ElementConfiguration._elementType">
            <summary>
            The type of the element.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ElementConfiguration._filterBy">
            <summary>
            A filter, if any, that should be applied to the elements.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ElementConfiguration._groupBy">
            <summary>
            A grouping specification, if any, that should be applied to the elements.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ElementConfiguration._id">
            <summary>
            The element configuration ID.  For use by element reference configurations.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ElementConfiguration._sortBy">
            <summary>
            A sort specification, if any, that specifies how elements will be sorted 
            within the parent.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.ElementConfiguration.ToString">
            <summary>
            Gets a string representation.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.ElementConfiguration.DoClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone of the instance.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.ElementConfiguration.ElementType">
            <summary>
            Gets or sets the element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.ElementConfiguration.FilterBy">
            <summary>
            Gets or sets the filter specification.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.ElementConfiguration.GroupBy">
            <summary>
            Gets or sets the the group by, which specifies grouping of elements.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.ElementConfiguration.Id">
            <summary>
            Gets or sets the element configuration identifier.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.ElementConfiguration.SortBy">
            <summary>
            Gets or sets the sort specification.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.TabConfiguration">
            <summary>
            Specifies tab style configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.TabConfiguration._spacesPerTab">
            <summary>
            Spaces per tab.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.TabConfiguration._tabStyle">
            <summary>
            Tab style (e.g. tabs or spaces)
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.TabConfiguration.#ctor">
            <summary>
            Creates a new TabConfiguration instance.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.TabConfiguration.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.Configuration.TabConfiguration.ToString">
            <summary>
            Gets the string representation.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.TabConfiguration.SpacesPerTab">
            <summary>
            Gets or sets the number of spaces per tab.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.TabConfiguration.TabStyle">
            <summary>
            Gets or sets the tab style.
            </summary>
        </member>
        <member name="T:NArrange.Core.FileFilter">
            <summary>
            Class for determining whether or not a file matches 
            filter criteria.
            </summary>
        </member>
        <member name="T:NArrange.Core.IFileFilter">
            <summary>
            Class for determining if a file meets specific
            filter criteria.
            </summary>
        </member>
        <member name="M:NArrange.Core.IFileFilter.IsMatch(System.IO.FileInfo)">
            <summary>
            Determines whether or not the specified file matches the
            filter criteria.
            </summary>
            <param name="file">File info for the file to analyze.</param>
            <returns>True if the file matches the filter, otherwise false.</returns>
        </member>
        <member name="F:NArrange.Core.FileFilter._conditionExpression">
            <summary>
            Condition that must be met by files, if any.
            </summary>
        </member>
        <member name="M:NArrange.Core.FileFilter.#ctor(System.String)">
            <summary>
            Creates a new FileFilter.
            </summary>
            <param name="conditionExpression">The condition expression text.</param>
        </member>
        <member name="M:NArrange.Core.FileFilter.IsMatch(System.IO.FileInfo)">
            <summary>
            Determines whether or not the specified file matches the
            filter criteria.
            </summary>
            <param name="file">File info for the file to analyze.</param>
            <returns>
            True if the file matches the filter, otherwise false.
            </returns>
        </member>
        <member name="T:NArrange.Core.CodeElements.FileUtilities">
            <summary>
            File utility methods.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.FileUtilities.GetAttribute(NArrange.Core.FileAttributeType,System.IO.FileInfo)">
            <summary>
            Gets the string representation of a file attribute.
            </summary>
            <param name="attributeType">Type of the attribute.</param>
            <param name="file">The file to get the attribute for.</param>
            <returns>The file attribute as text.</returns>
        </member>
        <member name="M:NArrange.Core.CodeElements.FileUtilities.GetEncoding(System.String)">
            <summary>
            Reads a file to determine its encoding.
            </summary>
            <param name="filename">The filename.</param>
            <returns>The detected encoding.</returns>
        </member>
        <member name="T:NArrange.Core.Configuration.SourceHandlerConfiguration">
            <summary>
            Specifies source code extension handler assembly.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.SourceHandlerConfiguration._language">
            <summary>
            Code language name.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.SourceHandlerConfiguration._projectExtensions">
            <summary>
            Project extensions associated with the language.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.SourceHandlerConfiguration._sourceExtensions">
            <summary>
            Source file extensions associated with the language.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.SourceHandlerConfiguration.ToString">
            <summary>
            Gets the string representation.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.SourceHandlerConfiguration.DoClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone of the instance.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.SourceHandlerConfiguration.HandlerType">
            <summary>
            Gets the handler type.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.SourceHandlerConfiguration.Language">
            <summary>
            Gets or sets the language name.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.SourceHandlerConfiguration.ProjectExtensions">
            <summary>
            Gets the collection of project extensions (Obsolete).
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.SourceHandlerConfiguration.SourceExtensions">
            <summary>
            Gets the collection of source extensions.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.HandlerConfigurationCollection">
            <summary>
            Collection of HandlerConfiguration instances.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.ClosingCommentConfiguration">
            <summary>
            Specifies closing comments configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ClosingCommentConfiguration._enabled">
            <summary>
            Whether or not closing comments should be written.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ClosingCommentConfiguration._format">
            <summary>
            Closing comment text format.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.ClosingCommentConfiguration.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.Configuration.ClosingCommentConfiguration.ToString">
            <summary>
            Gets the string representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.ClosingCommentConfiguration.Enabled">
            <summary>
            Gets or sets a value indicating whether closing comments are enabled.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.ClosingCommentConfiguration.Format">
            <summary>
            Gets or sets the format string.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.TypeElement">
            <summary>
            Class/struct code element.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.TypeElement._interacesLock">
            <summary>
            Synchronization lock for the interfaces collection.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.TypeElement._typeParametersLock">
            <summary>
            Synchronization lock for the type parameters collection.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.TypeElement._interfaces">
            <summary>
            Collection of interface references.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.TypeElement._type">
            <summary>
            Type of the type element.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.TypeElement._typeModifiers">
            <summary>
            Type modifiers.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.TypeElement._typeParameters">
            <summary>
            Generic type parameters.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.TypeElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <param name="visitor">Visitor to accept the code element.</param>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
        </member>
        <member name="M:NArrange.Core.CodeElements.TypeElement.AddInterface(NArrange.Core.CodeElements.InterfaceReference)">
            <summary>
            Adds an interface implementation to the type definition.
            </summary>
            <param name="interfaceReference">The interface reference.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.TypeElement.AddTypeParameter(NArrange.Core.CodeElements.TypeParameter)">
            <summary>
            Adds a type parameter to the type parameter list.
            </summary>
            <param name="typeParameter">The type parameter to add.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.TypeElement.DoAttributedClone">
            <summary>
            Clones an attributed element.
            </summary>
            <returns>Cloned attribute element state.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeElement.Interfaces">
            <summary>
            Gets the collection of implemented interface names for the type
            definition.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeElement.IsAbstract">
            <summary>
            Gets a value indicating whether or not the type is abstract.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeElement.IsNew">
            <summary>
            Gets a value indicating whether or not the type is new.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeElement.IsPartial">
            <summary>
            Gets a value indicating whether or not the type is a partial class.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeElement.IsSealed">
            <summary>
            Gets a value indicating whether or not the type is sealed.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeElement.IsStatic">
            <summary>
            Gets a value indicating whether or not the type is static.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeElement.IsUnsafe">
            <summary>
            Gets a value indicating whether or not the type is unsafe.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeElement.Type">
            <summary>
            Gets or sets the type of the type element.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeElement.TypeModifiers">
            <summary>
            Gets or sets the type attributes.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeElement.TypeParameters">
            <summary>
            Gets the list of type parameters.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeElement.BaseInterfaces">
            <summary>
            Gets the list of implemented interface names.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeElement.TypeParametersBase">
            <summary>
            Gets the list of type parameters.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.PropertyElement">
            <summary>
            Property element.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.PropertyElement._indexParameter">
            <summary>
            Index parameter name.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.PropertyElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <param name="visitor">Visitor to accept the code element.</param>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
        </member>
        <member name="M:NArrange.Core.CodeElements.PropertyElement.DoInterfaceMemberClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone of the element with interface member state copied.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.PropertyElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.PropertyElement.IndexParameter">
            <summary>
            Gets or sets the property index parameter.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.BinaryOperatorExpression">
            <summary>
            Binary operator expression.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.BinaryOperatorExpression._left">
            <summary>
            Left condition expression.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.BinaryOperatorExpression._operatorType">
            <summary>
            Operator type.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.BinaryOperatorExpression._right">
            <summary>
            Right condition expression.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.BinaryOperatorExpression.#ctor(NArrange.Core.BinaryExpressionOperator,NArrange.Core.Configuration.IConditionExpression,NArrange.Core.Configuration.IConditionExpression)">
            <summary>
            Creates a new operator expression.
            </summary>
            <param name="operatorType">Type of the operator.</param>
            <param name="left">The left expression.</param>
            <param name="right">The right expression.</param>
        </member>
        <member name="M:NArrange.Core.Configuration.BinaryOperatorExpression.ToString">
            <summary>
            Gets the string representation of this expression.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.BinaryOperatorExpression.Left">
            <summary>
            Gets the left expression.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.BinaryOperatorExpression.Operator">
            <summary>
            Gets the expression operator.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.BinaryOperatorExpression.Right">
            <summary>
            Gets the right expression.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.GroupElement">
            <summary>
            Element used to logically group other elements.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.GroupElement._customSeparator">
            <summary>
            Custom separator text.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.GroupElement._separatorType">
            <summary>
            Separator type.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.GroupElement.#ctor">
            <summary>
            Creates a group element.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.GroupElement.#ctor(System.String)">
            <summary>
            Creates a group element with the specified name.
            </summary>
            <param name="name">The group name.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.GroupElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <param name="visitor">Visitor to accept the code element.</param>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
        </member>
        <member name="M:NArrange.Core.CodeElements.GroupElement.DoClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone of the code element.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.GroupElement.CustomSeparator">
            <summary>
            Gets or sets the custom separator string.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.GroupElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.GroupElement.SeparatorType">
            <summary>
            Gets or sets the separator type.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.ElementComparer">
            <summary>
            Comparer for ICodeElements.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.ElementComparer._compareAttribute">
            <summary>
            Comparison element attribute.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.ElementComparer._comparison">
            <summary>
            Comparison delegate.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.ElementComparer._innerComparer">
            <summary>
            Inner comparer.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.ElementComparer._sortDirection">
            <summary>
            Sort direction.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.ElementComparer.#ctor(NArrange.Core.ElementAttributeType,NArrange.Core.SortDirection)">
            <summary>
            Creates a new ElementComparer.
            </summary>
            <param name="compareAttribute">The compare attribute.</param>
            <param name="sortDirection">The sort direction.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ElementComparer.#ctor(NArrange.Core.ElementAttributeType,NArrange.Core.SortDirection,System.Collections.Generic.IComparer{NArrange.Core.CodeElements.ICodeElement})">
            <summary>
            Create a new ElementComparer.
            </summary>
            <param name="compareAttribute">The compare attribute.</param>
            <param name="sortDirection">The sort direction.</param>
            <param name="innerComparer">The inner comparer.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ElementComparer.Compare(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zerox is less than y.Zerox equals y.Greater than zerox is greater than y.
            </returns>
        </member>
        <member name="M:NArrange.Core.CodeElements.ElementComparer.CreateComparison(NArrange.Core.ElementAttributeType)">
            <summary>
            Creates a comparison delegate based on the configuration.
            </summary>
            <param name="compareAttribute">The compare attribute.</param>
            <returns>
            Comparision delegate for two code elements.
            </returns>
        </member>
        <member name="T:NArrange.Core.ElementArrangerFactory">
            <summary>
            Class for creating ElementArranger instances based on configuration
            information.
            </summary>
        </member>
        <member name="M:NArrange.Core.ElementArrangerFactory.CreateElementArranger(NArrange.Core.Configuration.ConfigurationElement,NArrange.Core.Configuration.ConfigurationElement)">
            <summary>
            Creates an element arranger using the specified configuration information.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="parentConfiguration">The parent configuration.</param>
            <returns>
            Returns an IElementArranger if succesful, otherwise null.
            </returns>
        </member>
        <member name="M:NArrange.Core.ElementArrangerFactory.CreateChildrenArranger(NArrange.Core.Configuration.ConfigurationElement)">
            <summary>
            Creates an arranger for the children of elements associated with the 
            specified cofiguration.
            </summary>
            <param name="parentConfiguration">Parent configuration.</param>
            <returns>Element arranger for children.</returns>
        </member>
        <member name="T:NArrange.Core.MonoDevelopSolutionParser">
            <summary>
            MonoDevelop solution file parser.
            </summary>
        </member>
        <member name="F:NArrange.Core.MonoDevelopSolutionParser._extensions">
            <summary>
            File extensions handled by this solution parser.
            </summary>
        </member>
        <member name="M:NArrange.Core.MonoDevelopSolutionParser.Parse(System.String)">
            <summary>
            Parses project file names from a solution file.
            </summary>
            <param name="solutionFile">Solution file name.</param>
            <returns>A list of project file names</returns>
        </member>
        <member name="P:NArrange.Core.MonoDevelopSolutionParser.Extensions">
            <summary>
            Gets a list of extensions supported by this solution parser.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.UsingConfiguration">
            <summary>
            Specifies using/import configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.UsingConfiguration._moveTo">
            <summary>
            Specifies if and how using directives should be moved.
            </summary>
            <remarks>Default is None for backwards compatibility.</remarks>
        </member>
        <member name="M:NArrange.Core.Configuration.UsingConfiguration.#ctor">
            <summary>
            Creates a new UsingConfiguration instance.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.UsingConfiguration.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.Configuration.UsingConfiguration.ToString">
            <summary>
            Gets the string representation.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.UsingConfiguration.MoveTo">
            <summary>
            Gets or sets a value indicating how using elements should be moved, if supported
            by the language.
            </summary>
        </member>
        <member name="T:NArrange.Core.RegionArranger">
            <summary>
            Element arranger for adding members in regions.
            </summary>
        </member>
        <member name="F:NArrange.Core.RegionArranger._levelRegions">
            <summary>
            Other region names at this level.
            </summary>
        </member>
        <member name="F:NArrange.Core.RegionArranger._parentConfiguration">
            <summary>
            Parent configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.RegionArranger._childrenArranger">
            <summary>
            Arranger for child elements.
            </summary>
        </member>
        <member name="F:NArrange.Core.RegionArranger._regionConfiguration">
            <summary>
            Configuration for the region.
            </summary>
        </member>
        <member name="M:NArrange.Core.RegionArranger.#ctor(NArrange.Core.Configuration.RegionConfiguration,NArrange.Core.Configuration.ConfigurationElement)">
            <summary>
            Creates a new RegionArranger.
            </summary>
            <param name="regionConfiguration">Region configuration.</param>
            <param name="parentConfiguration">Parent configuration.</param>
        </member>
        <member name="M:NArrange.Core.RegionArranger.ArrangeElement(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Arranges the specified code element into the parent.
            </summary>
            <param name="parentElement">Parent element to arrange within.</param>
            <param name="codeElement">Code element to arrange.</param>
        </member>
        <member name="M:NArrange.Core.RegionArranger.CanArrange(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Determines whether or not this arranger can handle arrangement of
            the specified element.
            </summary>
            <param name="codeElement">The code element.</param>
            <returns>
            	<c>true</c> if this instance can arrange the specified code element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:NArrange.Core.RegionArranger.CanArrange(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Determines whether or not this arranger can handle arrangement of
            the specified element.
            </summary>
            <param name="parentElement">The parent element.</param>
            <param name="codeElement">The code element.</param>
            <returns>
            	<c>true</c> if this instance can arrange the specified parent element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:NArrange.Core.RegionArranger.InitializeChildrenArranger">
            <summary>
            Intitializes the arranger for children of the region.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.ICodeElementVisitor">
            <summary>
            Interface for a code element visitor.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitAttributeElement(NArrange.Core.CodeElements.AttributeElement)">
            <summary>
            Visits an AttributeElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitCommentElement(NArrange.Core.CodeElements.CommentElement)">
            <summary>
            Visits a CommentLineElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitConditionDirectiveElement(NArrange.Core.CodeElements.ConditionDirectiveElement)">
            <summary>
            Visits a ConditionDirectiveElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitConstructorElement(NArrange.Core.CodeElements.ConstructorElement)">
            <summary>
            Visits a ConstructorElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitDelegateElement(NArrange.Core.CodeElements.DelegateElement)">
            <summary>
            Visits a DelegateElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitEventElement(NArrange.Core.CodeElements.EventElement)">
            <summary>
            Visits an EventElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitFieldElement(NArrange.Core.CodeElements.FieldElement)">
            <summary>
            Visits a FieldElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitGroupElement(NArrange.Core.CodeElements.GroupElement)">
            <summary>
            Visits a GroupElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitMethodElement(NArrange.Core.CodeElements.MethodElement)">
            <summary>
            Visits a MethodElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitNamespaceElement(NArrange.Core.CodeElements.NamespaceElement)">
            <summary>
            Visits a NamespaceElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitPropertyElement(NArrange.Core.CodeElements.PropertyElement)">
            <summary>
            Visits a PropertyElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitRegionElement(NArrange.Core.CodeElements.RegionElement)">
            <summary>
            Visits a RegionElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitTypeElement(NArrange.Core.CodeElements.TypeElement)">
            <summary>
            Visits a TypeElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.ICodeElementVisitor.VisitUsingElement(NArrange.Core.CodeElements.UsingElement)">
            <summary>
            Visits a UsingElement.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="T:NArrange.Core.Configuration.ExtensionConfiguration">
            <summary>
            Specifies a source code or project extension.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ExtensionConfiguration._filterBy">
            <summary>
            Filter for files matching the extension.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.ExtensionConfiguration._name">
            <summary>
            File extension name.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.ExtensionConfiguration.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.Configuration.ExtensionConfiguration.ToString">
            <summary>
            Gets the string representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.ExtensionConfiguration.FilterBy">
            <summary>
            Gets or sets the filter specification.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.ExtensionConfiguration.Name">
            <summary>
            Gets or sets the extension name.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.FormattingConfiguration">
            <summary>
            Formatting configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.FormattingConfiguration._closingComments">
            <summary>
            Closing comment configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.FormattingConfiguration._lineSpacing">
            <summary>
            Line spacing configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.FormattingConfiguration._regions">
            <summary>
            Region formatting configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.FormattingConfiguration._tabs">
            <summary>
            Tab configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.FormattingConfiguration._usings">
            <summary>
            Using/import directive configuration.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.FormattingConfiguration.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:NArrange.Core.Configuration.FormattingConfiguration.ClosingComments">
            <summary>
            Gets or sets the closing comment configuration.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.FormattingConfiguration.LineSpacing">
            <summary>
            Gets or sets the line spacing configuration.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.FormattingConfiguration.Regions">
            <summary>
            Gets or sets the regions configuration.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.FormattingConfiguration.Tabs">
            <summary>
            Gets or sets the tab configuration.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.FormattingConfiguration.Usings">
            <summary>
            Gets or sets the using directive configuration.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.FieldElement">
            <summary>
            Field code element.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.FieldElement._initialValue">
            <summary>
            Field initial value.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.FieldElement._isVolatile">
            <summary>
            Whether or not the field is volatile.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.FieldElement._trailingComment">
            <summary>
            Trailing comment.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.FieldElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <param name="visitor">Visitor to accept the code element.</param>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
        </member>
        <member name="M:NArrange.Core.CodeElements.FieldElement.DoMemberClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone of the element with the member element state copied.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.FieldElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.FieldElement.InitialValue">
            <summary>
            Gets or sets the initial value of the field.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.FieldElement.IsConstant">
            <summary>
            Gets a value indicating whether or not the field is a constant.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.FieldElement.IsReadOnly">
            <summary>
            Gets a value indicating whether or not the field is read-only.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.FieldElement.IsVolatile">
            <summary>
            Gets or sets a value indicating whether or not the field is volatile.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.FieldElement.TrailingComment">
            <summary>
            Gets or sets the trailing comment.
            </summary>
        </member>
        <member name="T:NArrange.Core.GroupedInserter">
            <summary>
            Grouped inserter.
            </summary>
        </member>
        <member name="F:NArrange.Core.GroupedInserter._captureRegex">
            <summary>
            Regex for capturing the portion of the attribute to be used
            for grouping.
            </summary>
        </member>
        <member name="F:NArrange.Core.GroupedInserter._groupBy">
            <summary>
            Group by specifying the configuration for this inserter.
            </summary>
        </member>
        <member name="F:NArrange.Core.GroupedInserter._innerInserter">
            <summary>
            Inner inserter.
            </summary>
        </member>
        <member name="F:NArrange.Core.GroupedInserter._sortComparer">
            <summary>
            Sort comparer for inserting elements into groups.
            </summary>
        </member>
        <member name="M:NArrange.Core.GroupedInserter.#ctor(NArrange.Core.Configuration.GroupBy)">
            <summary>
            Creates a new GroupedInserter using the specified grouping configuration.
            </summary>
            <param name="groupBy">The group by.</param>
        </member>
        <member name="M:NArrange.Core.GroupedInserter.#ctor(NArrange.Core.Configuration.GroupBy,NArrange.Core.IElementInserter)">
            <summary>
            Creates a new GroupedInserter using the specified grouping configuration
            and sorter.
            </summary>
            <param name="groupBy">The group by.</param>
            <param name="innerInserter">The inner inserter.</param>
        </member>
        <member name="M:NArrange.Core.GroupedInserter.InsertElement(NArrange.Core.CodeElements.ICodeElement,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Inserts the element within the parent.
            </summary>
            <param name="parentElement">Parent element to insert into.</param>
            <param name="codeElement">Code element to insert.</param>
        </member>
        <member name="M:NArrange.Core.GroupedInserter.GetGroupName(NArrange.Core.ElementAttributeType,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Gets the name of the group the element falls into.
            </summary>
            <param name="elementFilterType">Type of the element filter.</param>
            <param name="codeElement">The code element.</param>
            <returns>The group name.</returns>
        </member>
        <member name="T:NArrange.Core.Configuration.SortBy">
            <summary>
            Specifies element sorting 
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.SortBy._by">
            <summary>
            Attribute to sort by.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.SortBy._direction">
            <summary>
            Sort direction.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.SortBy._innerSortBy">
            <summary>
            Innert sort, if any.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.SortBy.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>A clone of the instance.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.SortBy.ToString">
            <summary>
            Gets the string representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.SortBy.By">
            <summary>
            Gets or sets the attribute elements should be sorted by.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.SortBy.Direction">
            <summary>
            Gets or sets the sort direction.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.SortBy.InnerSortBy">
            <summary>
            Gets or sets the inner sort specification.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.FilterBy">
            <summary>
            Specifies element filtering 
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.FilterBy._conditionExpression">
            <summary>
            The filter condition.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.FilterBy.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.Configuration.FilterBy.ToString">
            <summary>
            Gets the string representation.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.FilterBy.Condition">
            <summary>
            Gets or sets the filter expression.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.NamespaceElement">
            <summary>
            Code namespace element.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.NamespaceElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <param name="visitor">Visitor to accept the code element.</param>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
        </member>
        <member name="M:NArrange.Core.CodeElements.NamespaceElement.DoClone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of the code element.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.NamespaceElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="T:NArrange.Core.ProjectManager">
            <summary>
            Provides project/file retrieval and storage functionality.
            </summary>
        </member>
        <member name="F:NArrange.Core.ProjectManager._configuration">
            <summary>
            Code configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.ProjectManager._projectExtensionHandlers">
            <summary>
            Project extension handler dictionary.
            </summary>
        </member>
        <member name="F:NArrange.Core.ProjectManager._sourceExtensionHandlers">
            <summary>
            Source file extension handler dictionary.
            </summary>
        </member>
        <member name="M:NArrange.Core.ProjectManager.#ctor(NArrange.Core.Configuration.CodeConfiguration)">
            <summary>
            Creates a new FileManager.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:NArrange.Core.ProjectManager.GetExtension(System.String)">
            <summary>
            Gets the file extension.
            </summary>
            <param name="inputFile">The input file.</param>
            <returns>The file extension.</returns>
        </member>
        <member name="M:NArrange.Core.ProjectManager.IsSolution(System.String)">
            <summary>
            Determines whether or not the specified file is a solution.
            </summary>
            <param name="inputFile">The input file.</param>
            <returns>
            	<c>true</c> if the specified input file is solution; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:NArrange.Core.ProjectManager.CanParse(System.String)">
            <summary>
            Determines whether or not the specified file can be parsed.
            </summary>
            <param name="inputFile">The input file.</param>
            <returns>
            	<c>true</c> if this instance can parse the specified input file; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:NArrange.Core.ProjectManager.GetSourceFiles(System.String)">
            <summary>
            Gets all parse-able source files that are children of the specified
            solution or project.  If an individual source file is provided, the
            same file name is returned.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>The list of source files.</returns>
        </member>
        <member name="M:NArrange.Core.ProjectManager.GetSourceHandler(System.String)">
            <summary>
            Retrieves an extension handler.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>Source handler.</returns>
        </member>
        <member name="M:NArrange.Core.ProjectManager.IsProject(System.String)">
            <summary>
            Determines whether or not the specified file is a project.
            </summary>
            <param name="inputFile">Input file.</param>
            <returns>Whether or not the file is a recognized project file.</returns>
        </member>
        <member name="M:NArrange.Core.ProjectManager.ParseElements(System.String,System.String)">
            <summary>
            Parses code elements from the input file.
            </summary>
            <param name="inputFile">The input file.</param>
            <param name="text">The text of the input file.</param>
            <returns>Collection of parsed code elements.</returns>
        </member>
        <member name="M:NArrange.Core.ProjectManager.IsRecognizedFile(System.String,NArrange.Core.Configuration.ExtensionConfigurationCollection)">
            <summary>
            Gets a boolean indicating whether or not the file is a 
            recognized source file.
            </summary>
            <param name="fileName">File to test.</param>
            <param name="extensions">Extension configurations.</param>
            <returns>A boolean indicating whehther or not the file is recognized.</returns>
        </member>
        <member name="M:NArrange.Core.ProjectManager.GetDirectorySourceFiles(System.String)">
            <summary>
            Gets all source file for a directory.
            </summary>
            <param name="directory">Directory to process.</param>
            <returns>Collection of source files in the directory.</returns>
        </member>
        <member name="M:NArrange.Core.ProjectManager.GetProjectHandler(System.String)">
            <summary>
            Retrieves an extension handler for a project file.
            </summary>
            <param name="fileName">File name.</param>
            <returns>Project handler for the file if available, otherwise null.</returns>
        </member>
        <member name="M:NArrange.Core.ProjectManager.GetProjectSourceFiles(System.String)">
            <summary>
            Gets all source files associated with a project.
            </summary>
            <param name="fileName">Project file name.</param>
            <returns>A collection of source files associated with the project.</returns>
        </member>
        <member name="M:NArrange.Core.ProjectManager.GetSolutionSourceFiles(System.String)">
            <summary>
            Gets all source files associated with a solution.
            </summary>
            <param name="fileName">Solution file name.</param>
            <returns>Collection of source file names.</returns>
        </member>
        <member name="M:NArrange.Core.ProjectManager.Initialize">
            <summary>
            Initializes the manager from the configuration supplied 
            during constuction.
            </summary>
        </member>
        <member name="M:NArrange.Core.ProjectManager.IsRecognizedSourceFile(System.String)">
            <summary>
            Gets a boolean indicating whether or not the file is a 
            recognized source file.
            </summary>
            <param name="fileName">File to test.</param>
            <returns>A boolean indicating whehther or not the file is recognized.</returns>
        </member>
        <member name="T:NArrange.Core.MonoDevelopProjectParser">
            <summary>
            Parses an individual MonoDevelop project (e.g. .mdp) for 
            individual source file names.
            </summary>
        </member>
        <member name="M:NArrange.Core.MonoDevelopProjectParser.Parse(System.String)">
            <summary>
            Parses source file names from a project file.
            </summary>
            <param name="projectFile">Project file name.</param>
            <returns>A list of source code filenames</returns>
        </member>
        <member name="T:NArrange.Core.ConditionExpressionEvaluator">
            <summary>
            Class for evaluating filter expressions.
            </summary>
        </member>
        <member name="F:NArrange.Core.ConditionExpressionEvaluator._instanceLock">
            <summary>
            Synchronization lock for the singleton instance.
            </summary>
        </member>
        <member name="F:NArrange.Core.ConditionExpressionEvaluator._instance">
            <summary>
            Singleton instance field.
            </summary>
        </member>
        <member name="M:NArrange.Core.ConditionExpressionEvaluator.#ctor">
            <summary>
            Creates a new ConditionExpressionEvaluator.
            </summary>
        </member>
        <member name="M:NArrange.Core.ConditionExpressionEvaluator.Evaluate(NArrange.Core.Configuration.IConditionExpression,System.IO.FileInfo)">
            <summary>
            Evaluates an expression against the specified file.
            </summary>
            <param name="conditionExpression">The condition expression.</param>
            <param name="file">The file to evaluate against.</param>
            <returns>True if the expression evaluates to true, otherwise false.</returns>
        </member>
        <member name="M:NArrange.Core.ConditionExpressionEvaluator.Evaluate(NArrange.Core.Configuration.IConditionExpression,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Evaluates an expression against the specified element.
            </summary>
            <param name="conditionExpression">The condition expression.</param>
            <param name="element">The element.</param>
            <returns>True if the expression holds true for the element, otherwise false.</returns>
        </member>
        <member name="M:NArrange.Core.ConditionExpressionEvaluator.GetExpressionValue(NArrange.Core.Configuration.IConditionExpression,NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Gets the expression value.
            </summary>
            <param name="expression">The expression.</param>
            <param name="element">The element.</param>
            <returns>The expression value as text.</returns>
        </member>
        <member name="M:NArrange.Core.ConditionExpressionEvaluator.GetExpressionValue(NArrange.Core.Configuration.IConditionExpression,System.Object)">
            <summary>
            Gets the expression value.
            </summary>
            <param name="expression">The expression.</param>
            <param name="entity">The entity.</param>
            <returns>The expression value as text.</returns>
        </member>
        <member name="M:NArrange.Core.ConditionExpressionEvaluator.GetExpressionValue(NArrange.Core.Configuration.IConditionExpression,System.IO.FileInfo)">
            <summary>
            Gets the expression value.
            </summary>
            <param name="expression">The expression.</param>
            <param name="file">The file to evaluate the expression against.</param>
            <returns>The expression value as text.</returns>
        </member>
        <member name="M:NArrange.Core.ConditionExpressionEvaluator.Evaluate``1(NArrange.Core.Configuration.IConditionExpression,``0)">
            <summary>
            Evaluates an expression against the specified entity.
            </summary>
            <typeparam name="TEntity">Entity type</typeparam>
            <param name="conditionExpression">The condition expression.</param>
            <param name="entity">The entity.</param>
            <returns>True if the expression holds true, otherwise false.</returns>
        </member>
        <member name="P:NArrange.Core.ConditionExpressionEvaluator.Instance">
            <summary>
            Gets the single instance of the expression evaluator.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeWriteVisitor">
            <summary>
            Abstract code write visitor implementation.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeWriteVisitor.DefaultBlockLength">
            <summary>
            Default element block length.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeWriteVisitor._configuration">
            <summary>
            Code configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeWriteVisitor._writer">
            <summary>
            The text writer to write elements to.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeWriteVisitor._tabCount">
            <summary>
            Tab count used to control the indentation level at which elements are written.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.#ctor(System.IO.TextWriter,NArrange.Core.Configuration.CodeConfiguration)">
            <summary>
            Creates a new VBWriteVisitor.
            </summary>
            <param name="writer">The writer.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitAttributeElement(NArrange.Core.CodeElements.AttributeElement)">
            <summary>
            Processes an attribute element.
            </summary>
            <param name="element">Attribute code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitCommentElement(NArrange.Core.CodeElements.CommentElement)">
            <summary>
            Processes a comment element.
            </summary>
            <param name="element">Comment code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitConditionDirectiveElement(NArrange.Core.CodeElements.ConditionDirectiveElement)">
            <summary>
            Processes a condition directive element.
            </summary>
            <param name="element">Condition directive code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitConstructorElement(NArrange.Core.CodeElements.ConstructorElement)">
            <summary>
            Processes a constructor element.
            </summary>
            <param name="element">Constructor code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitDelegateElement(NArrange.Core.CodeElements.DelegateElement)">
            <summary>
            Processes a delegate element.
            </summary>
            <param name="element">Delegate code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitEventElement(NArrange.Core.CodeElements.EventElement)">
            <summary>
            Processes a event element.
            </summary>
            <param name="element">Event code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitFieldElement(NArrange.Core.CodeElements.FieldElement)">
            <summary>
            Processes a field element.
            </summary>
            <param name="element">Field code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitGroupElement(NArrange.Core.CodeElements.GroupElement)">
            <summary>
            Processes a group element.
            </summary>
            <param name="element">Group element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitMethodElement(NArrange.Core.CodeElements.MethodElement)">
            <summary>
            Processes a method element.
            </summary>
            <param name="element">Method code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitNamespaceElement(NArrange.Core.CodeElements.NamespaceElement)">
            <summary>
            Processes a namespace element.
            </summary>
            <param name="element">Namespace code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitPropertyElement(NArrange.Core.CodeElements.PropertyElement)">
            <summary>
            Processes a property element.
            </summary>
            <param name="element">Property code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitRegionElement(NArrange.Core.CodeElements.RegionElement)">
            <summary>
            Processes a region element.
            </summary>
            <param name="element">Region code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitTypeElement(NArrange.Core.CodeElements.TypeElement)">
            <summary>
            Processes a type element.
            </summary>
            <param name="element">Type code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.VisitUsingElement(NArrange.Core.CodeElements.UsingElement)">
            <summary>
            Processes a using element.
            </summary>
            <param name="element">Using/Import directive code element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.FormatCommentText(NArrange.Core.CodeElements.ICommentElement)">
            <summary>
            Gets the formatted text to write for a comment.
            </summary>
            <param name="comment">Comment with text.</param>
            <returns>Formatted comment text.</returns>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.WriteBlockChildren(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Writes children for a block element.
            </summary>
            <param name="element">Element whose children will be written.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.WriteChildren(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Writes child elements.
            </summary>
            <param name="element">Element whose children will be written.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.WriteClosingComment(NArrange.Core.CodeElements.TextCodeElement,System.String)">
            <summary>
            Writes a closing comment.
            </summary>
            <param name="element">The element.</param>
            <param name="commentPrefix">Comment prefix.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.WriteComments(System.Collections.ObjectModel.ReadOnlyCollection{NArrange.Core.CodeElements.ICommentElement})">
            <summary>
            Writes a collection of comment lines.
            </summary>
            <param name="comments">The comments.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.WriteIndented(System.String)">
            <summary>
            Writes the specified text using the current TabCount.
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.WriteIndentedLine(System.String)">
            <summary>
            Writes a line of text using the current TabCount.
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.WriteIndentedLine">
            <summary>
            Writes a new line using the current TabCount.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.WriteRegionBeginDirective(NArrange.Core.CodeElements.RegionElement)">
            <summary>
            Writes a starting region directive.
            </summary>
            <param name="element">The region element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.WriteRegionEndDirective(NArrange.Core.CodeElements.RegionElement)">
            <summary>
            Writes an ending region directive.
            </summary>
            <param name="element">The region element.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.WriteTextBlock(System.String)">
            <summary>
            Writes a block of text.
            </summary>
            <param name="text">Block of text to write.</param>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.CreateTabWhitespace(System.Int32)">
            <summary>
            Creates whitespace for the specified number of tabs.
            </summary>
            <param name="tabCount">Number of tabs worth of whiespace to create.</param>
            <returns>Whitespace string.</returns>
        </member>
        <member name="M:NArrange.Core.CodeWriteVisitor.ProcessLineWhitepace(System.String,System.Int32@)">
            <summary>
            Processes leading/trailing whitespace for a line of text.
            </summary>
            <param name="line">Line to process.</param>
            <param name="lineTabCount">Number of preceding tabs.</param>
            <returns>Processed line.</returns>
        </member>
        <member name="P:NArrange.Core.CodeWriteVisitor.Configuration">
            <summary>
            Gets the code configuration.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeWriteVisitor.TabCount">
            <summary>
            Gets or sets the current tab count used for writing indented text.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeWriteVisitor.Writer">
            <summary>
            Gets the writer.
            </summary>
        </member>
        <member name="T:NArrange.Core.EnumUtilities">
            <summary>
            Enumeration utilities.
            </summary>
        </member>
        <member name="F:NArrange.Core.EnumUtilities._enumStringCache">
            <summary>
            Enumeration string cache.
            </summary>
        </member>
        <member name="M:NArrange.Core.EnumUtilities.ToString(System.Enum)">
            <summary>
            Gets the string representation of the specified enumeration value.
            </summary>
            <param name="value">Enumeration value.</param>
            <returns>String representation.</returns>
        </member>
        <member name="T:NArrange.Core.CodeElements.RegionElement">
            <summary>
            Region element.
            </summary>
            <remarks>Region elements are not parsed.</remarks>
        </member>
        <member name="F:NArrange.Core.CodeElements.RegionElement._directivesEnabled">
            <summary>
            Whether or not directives should be written for this region.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.RegionElement.Accept(NArrange.Core.CodeElements.ICodeElementVisitor)">
            <summary>
            Allows an ICodeElementVisitor to process (or visit) this element.
            </summary>
            <param name="visitor">Visitor to accept the code element.</param>
            <remarks>See the Gang of Four Visitor design pattern.</remarks>
        </member>
        <member name="M:NArrange.Core.CodeElements.RegionElement.DoClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone of the instance.</returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.RegionElement.DirectivesEnabled">
            <summary>
            Gets or sets a value indicating whether or not directives
            should be written for this region.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.RegionElement.ElementType">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="T:NArrange.Core.BackupUtilities">
            <summary>
            Class for backing up and restoring source files.  Utilizes zip archives.
            </summary>
        </member>
        <member name="F:NArrange.Core.BackupUtilities.IndexFileName">
            <summary>
            Backup index file name.
            </summary>
        </member>
        <member name="F:NArrange.Core.BackupUtilities.IndexSeparator">
            <summary>
            Index file token separator.
            </summary>
        </member>
        <member name="F:NArrange.Core.BackupUtilities.ZipFileName">
            <summary>
            Backup zip file name.
            </summary>
        </member>
        <member name="F:NArrange.Core.BackupUtilities.BackupRoot">
            <summary>
            Default backup root directory.
            </summary>
        </member>
        <member name="F:NArrange.Core.BackupUtilities.MaxIntLength">
            <summary>
            Max string length for an integer.
            </summary>
        </member>
        <member name="M:NArrange.Core.BackupUtilities.BackupFiles(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a backup of the specified files using the specified key.
            </summary>
            <param name="backupRoot">Backup root directory.</param>
            <param name="key">Backup key.</param>
            <param name="fileNames">Files to backup.</param>
            <returns>Backup location</returns>
        </member>
        <member name="M:NArrange.Core.BackupUtilities.CreateFileNameKey(System.String)">
            <summary>
            Creates a system unique key for the specified fileName.
            </summary>
            <param name="fileName">File name or path.</param>
            <returns>Unique key for the file name (hash).</returns>
        </member>
        <member name="M:NArrange.Core.BackupUtilities.CreateTempFilePath">
            <summary>
            Gets a new temporary file path for use as a directory or filename.
            </summary>
            <returns>Temp file path.</returns>
        </member>
        <member name="M:NArrange.Core.BackupUtilities.RestoreFiles(System.String,System.String)">
            <summary>
            Restores all files associated with the specified key.
            </summary>
            <param name="backupRoot">Backup root directory.</param>
            <param name="key">Backup key.</param>
            <returns>A boolean value indicating whether or not the operation was succesful.</returns>
        </member>
        <member name="M:NArrange.Core.BackupUtilities.TryDeleteDirectory(System.String)">
            <summary>
            Attempts to delete a directory, catching any exceptions.
            </summary>
            <param name="workingDirectory">Working directory path.</param>
            <returns>Returns a value indicating whether or not the directory was deleted.</returns>
        </member>
        <member name="T:NArrange.Core.Configuration.RegionConfiguration">
            <summary>
            Configuration element for regions.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.RegionConfiguration.DefaultDirectivesEnabled">
            <summary>
            Default for whether or not region directives are enabled.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.RegionConfiguration._directivesEnabled">
            <summary>
            Whether or not directives should be written for the region.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.RegionConfiguration._name">
            <summary>
            Region name.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.RegionConfiguration.ToString">
            <summary>
            Gets a string representation.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.RegionConfiguration.DoClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>Clone of this instance.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.RegionConfiguration.DirectivesEnabled">
            <summary>
            Gets or sets a value indicating whether or not this region 
            should use directives.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.RegionConfiguration.Name">
            <summary>
            Gets or sets the region name.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.ConfigurationElementCollection">
            <summary>
            Collection of ConfigurationElement instances.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeElements.TypeParameter">
            <summary>
            Type parameter definition for generic types.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.TypeParameter._constraintsLock">
            <summary>
            Synchronization lock for the type parameter constraints.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.TypeParameter._constraints">
            <summary>
            Type parameter constraints.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeElements.TypeParameter._name">
            <summary>
            Type parameter name.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.TypeParameter.#ctor">
            <summary>
            Creates a new TypeParameter.
            </summary>
        </member>
        <member name="M:NArrange.Core.CodeElements.TypeParameter.#ctor(System.String,System.String[])">
            <summary>
            Creates a new TypeParameter.
            </summary>
            <param name="name">The type parameter name.</param>
            <param name="constraints">The constraints.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.TypeParameter.AddConstraint(System.String)">
            <summary>
            Adds a constraint for the type parameter.
            </summary>
            <param name="constraint">The constraint.</param>
        </member>
        <member name="M:NArrange.Core.CodeElements.TypeParameter.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeParameter.Constraints">
            <summary>
            Gets the collection of constraints for this type parameter.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeParameter.Name">
            <summary>
            Gets or sets the type parameter name.
            </summary>
        </member>
        <member name="P:NArrange.Core.CodeElements.TypeParameter.BaseConstraints">
            <summary>
            Gets the list of parameter constraints.
            </summary>
        </member>
        <member name="T:NArrange.Core.SourceHandler">
            <summary>
            This class provides instances for handling language specific requests 
            based on file extension.
            </summary>
        </member>
        <member name="F:NArrange.Core.SourceHandler._configuration">
            <summary>
            Source handler configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.SourceHandler._assembly">
            <summary>
            Assembly the handler is loaded from.
            </summary>
        </member>
        <member name="F:NArrange.Core.SourceHandler._codeParser">
            <summary>
            Code parser.
            </summary>
        </member>
        <member name="F:NArrange.Core.SourceHandler._codeWriter">
            <summary>
            Code writer.
            </summary>
        </member>
        <member name="M:NArrange.Core.SourceHandler.#ctor(NArrange.Core.Configuration.SourceHandlerConfiguration)">
            <summary>
            Creates a new SourceHandler.
            </summary>
            <param name="configuration">Source handler configuration.</param>
        </member>
        <member name="M:NArrange.Core.SourceHandler.Initialize">
            <summary>
            Initializes the extension handler.
            </summary>
        </member>
        <member name="P:NArrange.Core.SourceHandler.CodeParser">
            <summary>
            Gets the code parser associated with the extension.
            </summary>
        </member>
        <member name="P:NArrange.Core.SourceHandler.CodeWriter">
            <summary>
            Gets the code writer associated with the extension.
            </summary>
        </member>
        <member name="P:NArrange.Core.SourceHandler.Configuration">
            <summary>
            Gets the handler configuration used to create this SourceHandler.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.RegionFormatConfiguration">
            <summary>
            Specifies region style configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.RegionFormatConfiguration._commentDirectiveBeginFormat">
            <summary>
            Begin comment region directive format.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.RegionFormatConfiguration._commentDirectiveBeginPattern">
            <summary>
            Begin comment region pattern.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.RegionFormatConfiguration._commentDirectiveEndFormat">
            <summary>
            End comment region directive format.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.RegionFormatConfiguration._commentDirectiveEndPattern">
            <summary>
            End comment region direcive pattern.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.RegionFormatConfiguration._endRegionNameEnabled">
            <summary>
            Whether or not end region names are enabled.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.RegionFormatConfiguration._style">
            <summary>
            Region style.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.RegionFormatConfiguration.#ctor">
            <summary>
            Creates a new RegionsConfiguration instance.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.RegionFormatConfiguration.Clone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.Configuration.RegionFormatConfiguration.ToString">
            <summary>
            Gets the string representation.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="P:NArrange.Core.Configuration.RegionFormatConfiguration.CommentDirectiveBeginFormat">
            <summary>
            Gets or sets the format string when comment region directives are used.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.RegionFormatConfiguration.CommentDirectiveBeginPattern">
            <summary>
            Gets or sets a regular expression for retrieving comment directive region names.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.RegionFormatConfiguration.CommentDirectiveEndFormat">
            <summary>
            Gets or sets the format string when comment region directives are used.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.RegionFormatConfiguration.CommentDirectiveEndPattern">
            <summary>
            Gets or sets a regular expression for retrieving comment directive region names.
            </summary>
            <value>The comment directive end pattern.</value>
        </member>
        <member name="P:NArrange.Core.Configuration.RegionFormatConfiguration.EndRegionNameEnabled">
            <summary>
            Gets or sets a value indicating whether end region names are enabled.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.RegionFormatConfiguration.Style">
            <summary>
            Gets or sets the number of spaces per tab.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.CodeConfiguration">
            <summary>
            Code arranger configuration information.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.CodeConfiguration._defaultLock">
            <summary>
            Synchronization lock for the default configuration instance.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.CodeConfiguration._serializer">
            <summary>
            Seriarializer for serializing and deserializing the configuration 
            to and from XML.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.CodeConfiguration._default">
            <summary>
            The default configuration instance.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.CodeConfiguration._encoding">
            <summary>
            Encoding configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.CodeConfiguration._formatting">
            <summary>
            Formatting configuration.
            </summary>
        </member>
        <member name="F:NArrange.Core.Configuration.CodeConfiguration._handlers">
            <summary>
            Collection of source/project handler configurations.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.#cctor">
            <summary>
            Type initialization.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.Load(System.String)">
            <summary>
            Loads a configuration from the specified file.
            </summary>
            <param name="fileName">Configuration file name.</param>
            <returns>The loaded code configuration if succesful, otherwise null.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.Load(System.String,System.Boolean)">
            <summary>
            Loads a configuration from the specified file.
            </summary>
            <param name="fileName">Configuration file name.</param>
            <param name="resolveReferences">Resolve element references.</param>
            <returns>The code configuration if succesful, otherwise null.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.Load(System.IO.Stream)">
            <summary>
            Loads a configuration from a stream.
            </summary>
            <param name="stream">The stream to load the configuration from.</param>
            <returns>The code configuration if succesful, otherwise null.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.Load(System.IO.Stream,System.Boolean)">
            <summary>
            Loads a configuration from a stream.
            </summary>
            <param name="stream">The sream to load the configuration from.</param>
            <param name="resolveReferences">
            Whether or not element references should be resolved.
            </param>
            <returns>The code configuration if succesful, otherwise null.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.Clone">
            <summary>
            Override Clone so that we can force resolution of element references.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.ResolveReferences">
            <summary>
            Resolves any reference elements in the configuration.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.Save(System.String)">
            <summary>
            Saves the configuration to a file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.DoClone">
            <summary>
            Creates a clone of this instance.
            </summary>
            <returns>A clone of the instance.</returns>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.HandleUnknownAttribute(System.Object,System.Xml.Serialization.XmlAttributeEventArgs)">
            <summary>
            Handler for unknown attributes.
            </summary>
            <param name="sender">The sender/</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.HandleUnknownElement(System.Object,System.Xml.Serialization.XmlElementEventArgs)">
            <summary>
            Handler for unknown elements.
            </summary>
            <param name="sender">The sender/</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.TreeProcess(NArrange.Core.Configuration.ConfigurationElement,System.Action{NArrange.Core.Configuration.ConfigurationElement}[])">
            <summary>
            Recurses through the configuration tree and executes actions against 
            each configuration element.
            </summary>
            <param name="element">Element to process.</param>
            <param name="actions">Actions to perform.</param>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.Upgrade">
            <summary>
            Upgrades the configuration.
            </summary>
        </member>
        <member name="M:NArrange.Core.Configuration.CodeConfiguration.UpgradeProjectExtensions">
            <summary>
            Moves project extensions to the new format.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.CodeConfiguration.Default">
            <summary>
            Gets the default configuration.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.CodeConfiguration.ClosingComments">
            <summary>
            Gets or sets the closing comment configuration.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.CodeConfiguration.Encoding">
            <summary>
            Gets or sets the encoding configuration.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.CodeConfiguration.Formatting">
            <summary>
            Gets or sets the formatting configuration.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.CodeConfiguration.Handlers">
            <summary>
            Gets the collection of source code/project handlers.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.CodeConfiguration.Regions">
            <summary>
            Gets or sets the regions configuration.
            </summary>
        </member>
        <member name="P:NArrange.Core.Configuration.CodeConfiguration.Tabs">
            <summary>
            Gets or sets the tab configuration.
            </summary>
        </member>
        <member name="T:NArrange.Core.BinaryExpressionOperator">
            <summary>
            Binary expression operator.
            </summary>
        </member>
        <member name="F:NArrange.Core.BinaryExpressionOperator.Equal">
            <summary>
            Equality operator.
            </summary>
        </member>
        <member name="F:NArrange.Core.BinaryExpressionOperator.NotEqual">
            <summary>
            Not equal operator.
            </summary>
        </member>
        <member name="F:NArrange.Core.BinaryExpressionOperator.Contains">
            <summary>
            Contains a substring.
            </summary>
        </member>
        <member name="F:NArrange.Core.BinaryExpressionOperator.Matches">
            <summary>
            Matches a substring.
            </summary>
        </member>
        <member name="F:NArrange.Core.BinaryExpressionOperator.And">
            <summary>
            Logical And.
            </summary>
        </member>
        <member name="F:NArrange.Core.BinaryExpressionOperator.Or">
            <summary>
            Logical Or.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeAccess">
            <summary>
            Code access level.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeAccess.None">
            <summary>
            None/Not specified.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeAccess.Private">
            <summary>
            Private accessibility.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeAccess.Protected">
            <summary>
            Protected/family accessibility.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeAccess.Internal">
            <summary>
            Internal/assembly accessibility.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeAccess.Public">
            <summary>
            Public accessibility.
            </summary>
        </member>
        <member name="T:NArrange.Core.CodeLevel">
            <summary>
            Represents a level in a code file.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeLevel.None">
            <summary>
            None, not specified.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeLevel.File">
            <summary>
            File level.
            </summary>
        </member>
        <member name="F:NArrange.Core.CodeLevel.Namespace">
            <summary>
            Namespace level.
            </summary>
        </member>
        <member name="T:NArrange.Core.CommentType">
            <summary>
            Comment type.
            </summary>
        </member>
        <member name="F:NArrange.Core.CommentType.Line">
            <summary>
            Single line comment.
            </summary>
        </member>
        <member name="F:NArrange.Core.CommentType.XmlLine">
            <summary>
            Single line XML comment.
            </summary>
        </member>
        <member name="F:NArrange.Core.CommentType.Block">
            <summary>
            Block comment.
            </summary>
        </member>
        <member name="T:NArrange.Core.ElementAttributeScope">
            <summary>
            Element attribute scope.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementAttributeScope.Element">
            <summary>
            Element scope.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementAttributeScope.Parent">
            <summary>
            Parent scope.
            </summary>
        </member>
        <member name="T:NArrange.Core.ElementAttributeType">
            <summary>
            Element attribute.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementAttributeType.None">
            <summary>
            None/Not specified.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementAttributeType.Name">
            <summary>
            Name attribute.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementAttributeType.Access">
            <summary>
            Access attribute.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementAttributeType.Modifier">
            <summary>
            Modifier attribute.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementAttributeType.ElementType">
            <summary>
            Element Type attribute.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementAttributeType.Type">
            <summary>
            Type attribute.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementAttributeType.Attributes">
            <summary>
            Attributes attribute.
            </summary>
        </member>
        <member name="T:NArrange.Core.ElementType">
            <summary>
            Element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.NotSpecified">
            <summary>
            Not specified.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.Comment">
            <summary>
            Comment element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.Attribute">
            <summary>
            Attribute element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.Using">
            <summary>
            Using statement element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.Namespace">
            <summary>
            Namespace element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.Region">
            <summary>
            Region element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.ConditionDirective">
            <summary>
            Condition directive element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.Field">
            <summary>
            Field element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.Constructor">
            <summary>
            Constructor element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.Property">
            <summary>
            Property element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.Method">
            <summary>
            Method element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.Event">
            <summary>
            Event element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.Delegate">
            <summary>
            Delegate element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementType.Type">
            <summary>
            Type element type.
            </summary>
        </member>
        <member name="T:NArrange.Core.FileAttributeType">
            <summary>
            File attribute.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileAttributeType.None">
            <summary>
            None/Not specified.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileAttributeType.Name">
            <summary>
            File name.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileAttributeType.Path">
            <summary>
            File path.
            </summary>
        </member>
        <member name="F:NArrange.Core.FileAttributeType.Attributes">
            <summary>
            Attributes for the file.
            </summary>
        </member>
        <member name="T:NArrange.Core.GroupSeparatorType">
            <summary>
            Grouping separator type.
            </summary>
        </member>
        <member name="F:NArrange.Core.GroupSeparatorType.NewLine">
            <summary>
            New line separator.
            </summary>
        </member>
        <member name="F:NArrange.Core.GroupSeparatorType.Custom">
            <summary>
            Custom separator string.
            </summary>
        </member>
        <member name="T:NArrange.Core.HandlerType">
            <summary>
            Handler type.
            </summary>
        </member>
        <member name="F:NArrange.Core.HandlerType.Source">
            <summary>
            Source handler.
            </summary>
        </member>
        <member name="F:NArrange.Core.HandlerType.Project">
            <summary>
            Project handler.
            </summary>
        </member>
        <member name="T:NArrange.Core.InterfaceReferenceType">
            <summary>
            Enumeration for interface impelementation types.
            </summary>
        </member>
        <member name="F:NArrange.Core.InterfaceReferenceType.None">
            <summary>
            None/Unknown reference type.
            </summary>
        </member>
        <member name="F:NArrange.Core.InterfaceReferenceType.Class">
            <summary>
            Base class implementation.
            </summary>
        </member>
        <member name="F:NArrange.Core.InterfaceReferenceType.Interface">
            <summary>
            Interface implementation.
            </summary>
        </member>
        <member name="T:NArrange.Core.LogLevel">
            <summary>
            Log level.
            </summary>
        </member>
        <member name="F:NArrange.Core.LogLevel.Error">
            <summary>
            Error message log level.
            </summary>
        </member>
        <member name="F:NArrange.Core.LogLevel.Warning">
            <summary>
            Warning message log level.
            </summary>
        </member>
        <member name="F:NArrange.Core.LogLevel.Info">
            <summary>
            Informational message log level.
            </summary>
        </member>
        <member name="F:NArrange.Core.LogLevel.Verbose">
            <summary>
            Verbose log level.
            </summary>
        </member>
        <member name="F:NArrange.Core.LogLevel.Trace">
            <summary>
            Trace log level.
            </summary>
        </member>
        <member name="T:NArrange.Core.MemberModifiers">
            <summary>
            Member attributes.
            </summary>
        </member>
        <member name="F:NArrange.Core.MemberModifiers.None">
            <summary>
            None/Not specified.
            </summary>
        </member>
        <member name="F:NArrange.Core.MemberModifiers.Abstract">
            <summary>
            Abstract member.
            </summary>
        </member>
        <member name="F:NArrange.Core.MemberModifiers.Sealed">
            <summary>
            Sealed member.
            </summary>
        </member>
        <member name="F:NArrange.Core.MemberModifiers.Static">
            <summary>
            Static member.
            </summary>
        </member>
        <member name="F:NArrange.Core.MemberModifiers.Unsafe">
            <summary>
            Unsafe member.
            </summary>
        </member>
        <member name="F:NArrange.Core.MemberModifiers.Virtual">
            <summary>
            Virtual member.
            </summary>
        </member>
        <member name="F:NArrange.Core.MemberModifiers.Override">
            <summary>
            Override member.
            </summary>
        </member>
        <member name="F:NArrange.Core.MemberModifiers.New">
            <summary>
            New member.
            </summary>
        </member>
        <member name="F:NArrange.Core.MemberModifiers.ReadOnly">
            <summary>
            ReadOnly member.
            </summary>
        </member>
        <member name="F:NArrange.Core.MemberModifiers.Constant">
            <summary>
            Constant member.
            </summary>
        </member>
        <member name="F:NArrange.Core.MemberModifiers.External">
            <summary>
            External member.
            </summary>
        </member>
        <member name="F:NArrange.Core.MemberModifiers.Partial">
            <summary>
            Partial member.
            </summary>
        </member>
        <member name="T:NArrange.Core.OperatorType">
            <summary>
            Operator type.
            </summary>
        </member>
        <member name="F:NArrange.Core.OperatorType.None">
            <summary>
            None/Not specified.
            </summary>
        </member>
        <member name="F:NArrange.Core.OperatorType.Explicit">
            <summary>
            Explicit operator.
            </summary>
        </member>
        <member name="F:NArrange.Core.OperatorType.Implicit">
            <summary>
            Implicit operator.
            </summary>
        </member>
        <member name="T:NArrange.Core.RegionStyle">
            <summary>
            Region style.
            </summary>
        </member>
        <member name="F:NArrange.Core.RegionStyle.Default">
            <summary>
            Default region style.
            </summary>
        </member>
        <member name="F:NArrange.Core.RegionStyle.Directive">
            <summary>
            Use region directives around region members.
            </summary>
        </member>
        <member name="F:NArrange.Core.RegionStyle.CommentDirective">
            <summary>
            Commented directives around region members.
            </summary>
        </member>
        <member name="F:NArrange.Core.RegionStyle.NoDirective">
            <summary>
            No directives around region members, just group.
            </summary>
        </member>
        <member name="T:NArrange.Core.SortDirection">
            <summary>
            Sort direction.
            </summary>
        </member>
        <member name="F:NArrange.Core.SortDirection.None">
            <summary>
            None, do not sort.
            </summary>
        </member>
        <member name="F:NArrange.Core.SortDirection.Ascending">
            <summary>
            Sort in ascending order.
            </summary>
        </member>
        <member name="F:NArrange.Core.SortDirection.Descending">
            <summary>
            Sort in descending order.
            </summary>
        </member>
        <member name="T:NArrange.Core.TabStyle">
            <summary>
            Tabbing style.
            </summary>
        </member>
        <member name="F:NArrange.Core.TabStyle.Spaces">
            <summary>
            Uses spaces when writing elements.
            </summary>
        </member>
        <member name="F:NArrange.Core.TabStyle.Tabs">
            <summary>
            Use tabs when writing elements.
            </summary>
        </member>
        <member name="T:NArrange.Core.TypeElementType">
            <summary>
            Type element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.TypeElementType.Module">
            <summary>
            Module element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.TypeElementType.Class">
            <summary>
            Class element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.TypeElementType.Structure">
            <summary>
            Structure element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.TypeElementType.Interface">
            <summary>
            Interface element type.
            </summary>
        </member>
        <member name="F:NArrange.Core.TypeElementType.Enum">
            <summary>
            Enumeration element type.
            </summary>
        </member>
        <member name="T:NArrange.Core.TypeModifiers">
            <summary>
            Type attributes.
            </summary>
            <remarks>This is a subset of member attributes that apply to types.</remarks>
        </member>
        <member name="F:NArrange.Core.TypeModifiers.None">
            <summary>
            None, no modifiers specified.
            </summary>
        </member>
        <member name="F:NArrange.Core.TypeModifiers.Abstract">
            <summary>
            Abstract type declaration.
            </summary>
        </member>
        <member name="F:NArrange.Core.TypeModifiers.Sealed">
            <summary>
            Sealed type declaration.
            </summary>
        </member>
        <member name="F:NArrange.Core.TypeModifiers.Static">
            <summary>
            Static type declaration.
            </summary>
        </member>
        <member name="F:NArrange.Core.TypeModifiers.Unsafe">
            <summary>
            Unsafe type declaration.
            </summary>
        </member>
        <member name="F:NArrange.Core.TypeModifiers.Partial">
            <summary>
            Partial type declaration.
            </summary>
        </member>
        <member name="F:NArrange.Core.TypeModifiers.New">
            <summary>
            New type declaration.
            </summary>
        </member>
        <member name="T:NArrange.Core.UnaryExpressionOperator">
            <summary>
            Unary expression operator.
            </summary>
        </member>
        <member name="F:NArrange.Core.UnaryExpressionOperator.Negate">
            <summary>
            Logical negate.
            </summary>
        </member>
        <member name="T:NArrange.Core.UsingType">
            <summary>
            Using type.
            </summary>
        </member>
        <member name="F:NArrange.Core.UsingType.Namespace">
            <summary>
            Namespace.
            </summary>
        </member>
        <member name="F:NArrange.Core.UsingType.Alias">
            <summary>
            Redefinition of namespace or type.
            </summary>
        </member>
        <member name="T:NArrange.Core.WhiteSpaceTypes">
            <summary>
            Whitespace character types.
            </summary>
        </member>
        <member name="F:NArrange.Core.WhiteSpaceTypes.None">
            <summary>
            None, do not include any whitespace.
            </summary>
        </member>
        <member name="F:NArrange.Core.WhiteSpaceTypes.Space">
            <summary>
            Include spaces.
            </summary>
        </member>
        <member name="F:NArrange.Core.WhiteSpaceTypes.Tab">
            <summary>
            Include tabs.
            </summary>
        </member>
        <member name="F:NArrange.Core.WhiteSpaceTypes.CarriageReturn">
            <summary>
            Include carriage returns.
            </summary>
        </member>
        <member name="F:NArrange.Core.WhiteSpaceTypes.Linefeed">
            <summary>
            Include line feeds.
            </summary>
        </member>
        <member name="F:NArrange.Core.WhiteSpaceTypes.SpaceAndTab">
            <summary>
            Include spaces and tabs.
            </summary>
        </member>
        <member name="F:NArrange.Core.WhiteSpaceTypes.CarriageReturnAndLinefeed">
            <summary>
            Include carriage returns and line feeds.
            </summary>
        </member>
        <member name="F:NArrange.Core.WhiteSpaceTypes.All">
            <summary>
            Include all whitespace characters.
            </summary>
        </member>
        <member name="T:NArrange.Core.SolutionParser">
            <summary>
            Parses a solution for individual project file names.
            </summary>
        </member>
        <member name="F:NArrange.Core.SolutionParser._instanceLock">
            <summary>
            Singleton synch lock.
            </summary>
        </member>
        <member name="F:NArrange.Core.SolutionParser._extensions">
            <summary>
            List of extensions handled by the solution parser.
            </summary>
        </member>
        <member name="F:NArrange.Core.SolutionParser._parserMap">
            <summary>
            Parser map.
            </summary>
        </member>
        <member name="F:NArrange.Core.SolutionParser._instance">
            <summary>
            Singleton instance.
            </summary>
        </member>
        <member name="M:NArrange.Core.SolutionParser.#ctor">
            <summary>
            Creates a new solution parser.
            </summary>
        </member>
        <member name="M:NArrange.Core.SolutionParser.IsSolution(System.String)">
            <summary>
            Gets a value indicating whether or not the specified file
            is a recognized solution file.
            </summary>
            <param name="inputFile">Input file name.</param>
            <returns>A boolean indicating whether or not the file is a solution.</returns>
        </member>
        <member name="M:NArrange.Core.SolutionParser.Parse(System.String)">
            <summary>
            Parses project file names from a solution file.
            </summary>
            <param name="solutionFile">Solution file name.</param>
            <returns>A list of project file names</returns>
        </member>
        <member name="P:NArrange.Core.SolutionParser.Instance">
            <summary>
            Gets a solution parser for all solution types.
            </summary>
        </member>
        <member name="P:NArrange.Core.SolutionParser.Extensions">
            <summary>
            Gets a list of extensions supported by this solution parser.
            </summary>
        </member>
        <member name="T:NArrange.Core.ConsoleLogger">
            <summary>
            Console logger.
            </summary>
        </member>
        <member name="F:NArrange.Core.ConsoleLogger.ErrorColor">
            <summary>
            Console message color for errors.
            </summary>
        </member>
        <member name="F:NArrange.Core.ConsoleLogger.InfoColor">
            <summary>
            Console message color for informational messages.
            </summary>
        </member>
        <member name="F:NArrange.Core.ConsoleLogger.TraceColor">
            <summary>
            Console message color for trace messages.
            </summary>
        </member>
        <member name="F:NArrange.Core.ConsoleLogger.WarningColor">
            <summary>
            Console message color for warnings.
            </summary>
        </member>
        <member name="F:NArrange.Core.ConsoleLogger._trace">
            <summary>
            Log trace messages to the console.
            </summary>
        </member>
        <member name="M:NArrange.Core.ConsoleLogger.WriteMessage(System.ConsoleColor,System.String,System.Object[])">
            <summary>
            Writes a message to the console using the specified color.
            </summary>
            <param name="color">The color.</param>
            <param name="message">The message or format.</param>
            <param name="args">The message format arguments.</param>
        </member>
        <member name="M:NArrange.Core.ConsoleLogger.LogMessage(NArrange.Core.LogLevel,System.String,System.Object[])">
            <summary>
            Logs a message to the console.
            </summary>
            <param name="level">Log level.</param>
            <param name="message">Log message.</param>
            <param name="args">Message arguments.</param>
        </member>
        <member name="P:NArrange.Core.ConsoleLogger.Trace">
            <summary>
            Gets or sets a value indicating whether or not trace messages should be 
            written.
            </summary>
        </member>
        <member name="T:NArrange.Core.ElementFilter">
            <summary>
            Class for determining whether or not an element matches 
            filter criteria.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementFilter._conditionExpression">
            <summary>
            Filter condition expression.
            </summary>
        </member>
        <member name="F:NArrange.Core.ElementFilter._requiredScope">
            <summary>
            Filter condition scope that is required for evaluation.
            </summary>
        </member>
        <member name="M:NArrange.Core.ElementFilter.#ctor(System.String)">
            <summary>
            Creates a new ElementFilter.
            </summary>
            <param name="conditionExpression">The condition expression.</param>
        </member>
        <member name="M:NArrange.Core.ElementFilter.IsMatch(NArrange.Core.CodeElements.ICodeElement)">
            <summary>
            Determines whether or not the specified code element matches the
            filter criteria.
            </summary>
            <param name="codeElement">Code element to analyze.</param>
            <returns>
            True if the elemet matches the filter, otherwise false.
            </returns>
        </member>
        <member name="M:NArrange.Core.ElementFilter.GetRequiredScope(NArrange.Core.Configuration.IConditionExpression)">
            <summary>
            Gets the scope required to evaluate the condition.
            </summary>
            <param name="expression">Condition expression.</param>
            <returns>Element attribute scope.</returns>
        </member>
        <member name="P:NArrange.Core.ElementFilter.RequiredScope">
            <summary>
            Gets the required scope information for evaluating the condition.
            </summary>
        </member>
        <member name="T:NArrange.Core.Configuration.ExtensionConfigurationCollection">
            <summary>
            Collection of ExtensionConfiguration instances.
            </summary>
        </member>
    </members>
</doc>
