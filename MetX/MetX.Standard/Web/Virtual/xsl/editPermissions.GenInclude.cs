// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable UnusedType.Global
namespace MetX.Standard.Web.Virtual.xsl {
   /// <summary>Provides access to static virtual file content for files</summary>
   public partial class EditPermissions {
       /// <summary>The static contents of the file: "C:\data\code\wmr\MetX\Web\Virtual\xsl\editPermissions.xsl" as it existed at compile time.</summary>
       public const string Xsl = "<?xml version=\"1.0\" ?>\r\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r\n               \r\n                xmlns:xlg=\"urn:xlg\"\r\n                version=\"1.0\">\r\n  <xsl:output method=\"html\" />\r\n  <xsl:template match=\"/xlgDoc\">\r\n    <HTML>\r\n      <HEAD>\r\n        <title>Edit Permissions</title>\r\n        <LINK REL=\"StyleSheet\" TYPE=\"text/css\" HREF=\"/xlgSupport/css/Styles.css\" />\r\n        <script language=\"javascript\">\r\n          function handleCategoryClick() {\r\n            document.location = 'editPermissions.aspx?Application=<xsl:value-of select=\"/xlgDoc/Application/@ApplicationName\"/>&amp;GroupName=<xsl:value-of select=\"/xlgDoc/Group/@GroupName\"/>&amp;Category=' + document.getElementById('Category').value;\r\n          }\r\n        </script>\r\n      </HEAD>\r\n      <body>\r\n        <H1>XLG Security Group Page Permission Editor</H1>\r\n        <H2>Application: <font color=\"blue\"><xsl:value-of select=\"/xlgDoc/Application/@ApplicationName\"/> </font></H2>\r\n        <H2>Security Group: <font color=\"blue\"><xsl:value-of select=\"/xlgDoc/Group/@GroupName\"/></font></H2>\r\n        <H3><a class=\"buttonLink\"><xsl:attribute name=\"href\">editApplication.aspx?Application=<xsl:value-of select=\"/xlgDoc/Application/@ApplicationName\"/></xsl:attribute>Change Security Groups</a></H3>\r\n\r\n				<table border=\"0\" cellpadding=\"1\" cellspacing=\"1\">\r\n					<tr CLASS=\"headerContent\">\r\n              <td style=\"width: 10px; background-color: white;\">&amp;nbsp;</td>\r\n						<td>Resource Name</td>\r\n						<td>Group Permissions</td>\r\n              <td style=\"width: 10px; background-color: white;\">&amp;nbsp;</td>\r\n              <td>\r\n		            <xsl:variable name=\"uppercase\">ABCDEFGHIJKLMNOPQRSTUVWXYZ</xsl:variable>\r\n		            <xsl:variable name=\"lowercase\">abcdefghijklmnopqrstuvwxyz</xsl:variable>\r\n		            Category Overrides : <select size=\"1\" name=\"Category\" id=\"Category\" onchange=\"handleCategoryClick();\">\r\n                  <xsl:if test=\"/xlgDoc/@Category=''\">\r\n                    <option value=\"\" selected=\"on\"></option>\r\n                  </xsl:if>\r\n			            <xsl:for-each select=\"/xlgDoc/Categorys/Category\">\r\n					            <option>\r\n						            <xsl:attribute name=\"value\"><xsl:value-of select=\"@Name\" /></xsl:attribute>\r\n						            <xsl:if test=\"normalize-space(translate(string(/xlgDoc/@Category),$lowercase,$uppercase))=normalize-space(translate(@Name,$lowercase,$uppercase))\">\r\n							            <xsl:attribute name=\"selected\">on</xsl:attribute>\r\n						            </xsl:if>\r\n						            <xsl:value-of select=\"@Name\" />\r\n					            </option>\r\n			            </xsl:for-each>\r\n		            </select>\r\n              </td>\r\n            </tr>\r\n          <xsl:for-each select=\"/xlgDoc/Permissions/Permission\">\r\n					<tr>\r\n						<xsl:choose>\r\n							<xsl:when test=\"position() mod 2 = 0\"><xsl:attribute name=\"class\">contentDataRow1</xsl:attribute></xsl:when>\r\n							<xsl:otherwise><xsl:attribute name=\"class\">contentDataRow2</xsl:attribute></xsl:otherwise>\r\n						</xsl:choose>\r\n              <td style=\"width: 10px; background-color: white;\">&amp;nbsp;</td>\r\n            <td><b><xsl:value-of select=\"@PageName\"/></b></td>\r\n            <xsl:apply-templates select=\".\" />\r\n            <xsl:if test=\"/xlgDoc/@Category!=''\">\r\n              <td style=\"width: 10px; background-color: white;\">&amp;nbsp;</td>\r\n              <xsl:variable name=\"pagename\" select=\"@PageName\" />\r\n              <xsl:choose>\r\n                <xsl:when test=\"/xlgDoc/Overrides/Permission[@PageName=$pagename]\">\r\n                  <xsl:apply-templates select=\"/xlgDoc/Overrides/Permission[@PageName=$pagename]\" />\r\n                </xsl:when>\r\n                <xsl:otherwise>\r\n                 <td>\r\n                   <a class=\"buttonLinkLight\" title=\"Click to override group permissions\">\r\n                     <xsl:attribute name=\"href\">editPermissions.aspx?Application=<xsl:value-of select=\"/xlgDoc/Application/@ApplicationName\"/>&amp;GroupName=<xsl:value-of select=\"/xlgDoc/Group/@GroupName\"/>&amp;PageName=<xsl:value-of select=\"@PageName\"/>&amp;Category=<xsl:value-of select=\"/xlgDoc/@Category\"/>&amp;PostAction=add&amp;P1=<xsl:value-of select=\"@P1\"/></xsl:attribute>\r\n                     Override\r\n                   </a>\r\n                 </td>\r\n                </xsl:otherwise>\r\n              </xsl:choose>\r\n            </xsl:if>\r\n					</tr>\r\n          </xsl:for-each>\r\n        </table>\r\n        <hr />\r\n        <table border=\"1\" cellpadding=\"3\" cellspacing=\"2\">\r\n          <tr>\r\n            <td valign=\"top\">\r\n              Please use the following commands carefully<br />\r\n              because they affect the entire group's permissions.\r\n            </td>\r\n            <td>\r\n              <input type=\"submit\" name=\"buttonNone\" value=\" None \" id=\"buttonNone\" /> <br />\r\n              <input type=\"submit\" name=\"buttonReadOnly\" value=\" Read \" id=\"buttonReadOnly\" /> <br />\r\n              <input type=\"submit\" name=\"buttonReadWrite\" value=\" Read &amp;amp; Write \" id=\"buttonReadWrite\" /> <br />\r\n              <input type=\"submit\" name=\"buttonReadWriteExecute\" value=\" Read, Write &amp;amp; Execute \" id=\"buttonReadWriteExecute\" /> <br />\r\n              <input type=\"submit\" name=\"buttonReadWriteExecuteSpecial\" value=\" Read, Write, Execute &amp;amp; Special \" id=\"buttonReadWriteExecuteSpecial\" /> <br />\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </body>\r\n    </HTML>\r\n  </xsl:template>\r\n  \r\n  <xsl:template match=\"Permission\">\r\n    <td>\r\n      <table border=\"0\">\r\n        <tr>\r\n      <xsl:call-template name=\"bit\">\r\n        <xsl:with-param name=\"name\">Create</xsl:with-param>\r\n        <xsl:with-param name=\"value\" select=\"number(16)\" />\r\n        <xsl:with-param name=\"node\" select=\".\" />\r\n      </xsl:call-template>\r\n      <xsl:call-template name=\"bit\">\r\n        <xsl:with-param name=\"name\">Read</xsl:with-param>\r\n        <xsl:with-param name=\"value\" select=\"number(1)\" />\r\n        <xsl:with-param name=\"node\" select=\".\" />\r\n      </xsl:call-template>\r\n      <xsl:call-template name=\"bit\">\r\n        <xsl:with-param name=\"name\">Update</xsl:with-param>\r\n        <xsl:with-param name=\"value\" select=\"number(2)\" />\r\n        <xsl:with-param name=\"node\" select=\".\" />\r\n      </xsl:call-template>\r\n      <xsl:call-template name=\"bit\">\r\n        <xsl:with-param name=\"name\">Delete</xsl:with-param>\r\n        <xsl:with-param name=\"value\" select=\"number(32)\" />\r\n        <xsl:with-param name=\"node\" select=\".\" />\r\n      </xsl:call-template>\r\n      <xsl:call-template name=\"bit\">\r\n        <xsl:with-param name=\"name\">Execute</xsl:with-param>\r\n        <xsl:with-param name=\"value\" select=\"number(4)\" />\r\n        <xsl:with-param name=\"node\" select=\".\" />\r\n      </xsl:call-template>\r\n      <xsl:call-template name=\"bit\">\r\n        <xsl:with-param name=\"name\">Special</xsl:with-param>\r\n        <xsl:with-param name=\"value\" select=\"number(8)\" />\r\n        <xsl:with-param name=\"node\" select=\".\" />\r\n      </xsl:call-template>\r\n        </tr>\r\n      </table>\r\n    </td>\r\n  </xsl:template>\r\n  <xsl:template name=\"bit\">\r\n    <xsl:param name=\"name\" />\r\n    <xsl:param name=\"value\" />\r\n    <xsl:param name=\"node\" />\r\n        <td style=\"width: 20px; height: 20px;\">\r\n            <xsl:choose>\r\n              <xsl:when test=\"xlg:HasBit($node/@P1, $value)\">\r\n                <a class=\"buttonLinkDark\" title=\"Click to Revoke\"><xsl:attribute name=\"href\">editPermissions.aspx?PostAction=add&amp;Category=<xsl:value-of select=\"/xlgDoc/@Category\"/>&amp;id=<xsl:value-of select=\"@PermissionID\"/>&amp;add=-<xsl:value-of select=\"$value\" />&amp;Application=<xsl:value-of select=\"/xlgDoc/Application/@ApplicationName\"/>&amp;GroupName=<xsl:value-of select=\"/xlgDoc/Group/@GroupName\"/>&amp;PageName=<xsl:value-of select=\"@PageName\"/></xsl:attribute><xsl:value-of select=\"$name\"/></a>\r\n              </xsl:when>\r\n              <xsl:otherwise>\r\n                <a class=\"buttonLinkLight\" title=\"Click to Grant\"><xsl:attribute name=\"href\">editPermissions.aspx?PostAction=add&amp;Category=<xsl:value-of select=\"/xlgDoc/@Category\"/>&amp;id=<xsl:value-of select=\"@PermissionID\"/>&amp;add=<xsl:value-of select=\"$value\" />&amp;Application=<xsl:value-of select=\"/xlgDoc/Application/@ApplicationName\"/>&amp;GroupName=<xsl:value-of select=\"/xlgDoc/Group/@GroupName\"/>&amp;PageName=<xsl:value-of select=\"@PageName\"/></xsl:attribute><xsl:value-of select=\"$name\"/></a>\r\n              </xsl:otherwise>\r\n            </xsl:choose>\r\n        </td>\r\n  </xsl:template>\r\n</xsl:stylesheet>";
       /// <summary>Returns xsl inside a StringBuilder.</summary>
       /// <returns>A StringBuilder with the compile time file contents</returns>
       public static System.Text.StringBuilder XslStringBuilder => new(Xsl);
   }
}
