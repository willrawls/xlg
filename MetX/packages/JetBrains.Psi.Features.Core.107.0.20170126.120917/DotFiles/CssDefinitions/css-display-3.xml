<?xml version="1.0" encoding="utf-8"?>
<!--
CSS Display Module Level 3
W3C Working Draft, 11 September 2014
http://www.w3.org/TR/2014/WD-css-display-3-20140911/
-->
<definitions xmlns="urn:schemas-jetbrains-com:css-xml">
  <property id="display-inside" declared-in="3.0" url="http://www.w3.org/TR/css-display-3/#propdef-display-inside" applies="all elements"
            initial="auto" inherited="no" percentage="n/a" media="all">
    <description><![CDATA[
      <p>The display-inside property specifies the <dfn data-dfn-type="dfn" data-export="" id="inner-display-type">inner display type</dfn>
        of the box generated by the element, dictating how its contents lay out inside the box.</p>
      ]]></description>
    <group type="or">
      <name value="auto"
            tooltip="If the element’s computed display-outside value is inline-level, the element is an inline element, and lays out its contents using inline layout. [CSS21] If the element’s computed display-outside value is an layout-specific internal type, this elements acts as normal for its given display-outside value. Otherwise, this value computes to block."/>
      <name value="block" tooltip="The element lays out its contents using block layout."/>
      <name value="table" tooltip="The element lays out its contents using table layout."/>
      <name value="flex" browsers="FF18.0,O12.50" tooltip="The element lays out its contents using flex layout."/>
      <name value="-webkit-flex" browsers="C21.0,S6.1" tooltip="The element lays out its contents using flex layout."/>
      <name value="-moz-flex" browsers="FF20" tooltip="The element lays out its contents using flex layout."/>
      <name value="-ms-flex" browsers="IE10" tooltip="The element lays out its contents using flex layout."/>
      <name value="-o-flex" browsers="O12.50" tooltip="The element lays out its contents using flex layout."/>
      <name value="grid" tooltip="The element lays out its contents using grid layout."/>
      <name value="ruby" tooltip="The element lays out its contents using ruby layout."/>
      <inline id="wide-keywords" inline="yes"/>
    </group>
  </property>

  <property id="display-outside" declared-in="3.0" url="http://www.w3.org/TR/css-display-3/#propdef-display-outside" applies="all elements"
            initial="inline-level" inherited="no" percentage="n/a" media="all">
    <description><![CDATA[
      <p>The display-outside property specifies the <dfn data-dfn-type="dfn" data-export="" id="outer-display-type">outer display type</dfn>
        of the box generated by the element, dictating how the element participates in its parent formatting context.</p>
      ]]></description>
    <group type="or">
      <name value="block-level"
            tooltip="The element generates a block-level box, and participates in a block formatting context. Other formatting contexts, such as flex formatting contexts, may also work with block-level elements. [CSS21]"/>
      <name value="inline-level"
            tooltip="The element generates an inline-level box, and participates in an inline formatting context. [CSS21]"/>
      <name value="run-in"
            tooltip="The element generates a run-in box. Run-in elements act like inlines or blocks, depending on the surrounding elements. See §4 Run-In Layout for details."/>
      <name value="contents"
            tooltip="The element itself does not generate any boxes, but its children and pseudo-elements still generate boxes as normal. For the purposes of box generation and layout, the element must be treated as if it had been replaced with its children and pseudo-elements in the document tree. contents currently only has an effect on box generation and layout. Other things that care about the document tree are unaffected, like counter scopes. Is this what we want?"/>
      <name value="none"
            tooltip="The element generates no boxes, and does not participate in any formatting context. Note: This value exists for legacy reasons, and interacts with the separate box-suppress property. It is recommended that box-suppress be used instead of display: none, so that the element’s display type is automatically preserved for when it’s no longer suppressed."/>
      <name value="table-row-group"/>
      <name value="table-header-group"/>
      <name value="table-footer-group"/>
      <name value="table-row"/>
      <name value="table-cell"/>
      <name value="table-column-group"/>
      <name value="table-column"/>
      <name value="table-caption"/>
      <name value="ruby-base"/>
      <name value="ruby-text"/>
      <name value="ruby-base-container"/>
      <name value="ruby-text-container"/>
      <inline id="wide-keywords" inline="yes"/>
    </group>
  </property>

  <property id="display-list" declared-in="3.0" url="http://www.w3.org/TR/css-display-3/#propdef-display-list" applies="all elements"
            initial="none" inherited="no" percentage="n/a" media="all">
    <group type="or">
      <name value="none"/>
      <name value="list-item" tooltip="The element generates a ::marker pseudo-element and is considered a list item."/>
      <inline id="wide-keywords" inline="yes"/>
    </group>
  </property>

  <named-value id="display-legacy" declared-in="3.0" url="https://www.w3.org/TR/css-display-3/#typedef-display-legacy">
    <group type="or">
      <name value="inline-block" tooltip="Behaves as ‘inline flow-root’."/>
      <name value="inline-list-item"/>
      <name value="inline-table" tooltip="Behaves as ‘inline table’."/>
      <name value="inline-flex" browsers="FF18.0,O12.50" tooltip="Behaves as ‘inline flex’."/>
      <name value="inline-grid" tooltip="Behaves as ‘inline grid’."/>
    </group>
  </named-value>

  <property id="display" declared-in="3.0" url="http://www.w3.org/TR/css-display-3/#propdef-display" applies="see individual properties">
    <description><![CDATA[
      <p>The display shorthand property sets all the display type properties in one declaration:
        <see cref="P:display-outside"/>,
        <see cref="P:display-inside"/>, and
        <see cref="P:display-list"/>. If only one keyword is specified or only one keyword is specified together with list-item, the
        shorthand expands as specified below:</p>
      ]]></description>
    <group type="or">
      <group type="any">
        <property id="display-inside"/>
        <property id="display-outside"/>
        <property id="display-list"/>
      </group>
      <name value="inline"/>
      <inline id="ms-display-values"/>
      <inline id="mozilla-display-values"/>
      <inline id="webkit-display-values"/>
      <inline id="display-legacy"/>
      <inline id="wide-keywords" inline="yes"/>
    </group>
  </property>

  <property id="box-suppress" declared-in="3.0" url="http://www.w3.org/TR/css-display-3/#propdef-box-suppress" applies="all elements"
            initial="show" inherited="no" percentage="n/a" media="all">
    <description><![CDATA[
      <p>If the computed value of
        <see cref="P:display-outside"/> is none, the computed value of box-suppress is discard. Otherwise, the computed value is the
        specified value.</p>
      ]]></description>
    <group type="or">
      <name value="show" tooltip="The element generates boxes as normal, per its display-* properties."/>
      <name value="discard" tooltip="The element generates no boxes at all."/>
      <name value="hide"
            tooltip="The element generates boxes as normal, but those boxes do not participate in layout in any way, and must not be displayed. For the purpose of any layout-related information, such as querying for the computed value of the element’s width property, it must be treated as if it did not generate any boxes. Properties that rely on boxes but do not rely on layout, such as animations, counter-increment, etc., must work as normal on this element and its descendants. This needs more clarity about what &quot;layout-related&quot; and &quot;participates in layout&quot; means. Does the box still generate anonymous boxes, etc.? How does this affect speech? Is that &quot;layout&quot;?"/>
      <inline id="wide-keywords" inline="yes"/>
    </group>
  </property>

</definitions>
