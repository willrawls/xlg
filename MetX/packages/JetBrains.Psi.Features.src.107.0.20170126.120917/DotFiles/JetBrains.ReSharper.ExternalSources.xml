<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.ExternalSources</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Core.IResourceConsumingNode">
            <summary>
            Node for which the calculation of the subtree can consume a lot of processor time or memory
            (e.g. BaseTypesNode, MetadataTreeFolderNode, etc.)
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Core.ExplorerNode.GetChildren">
            <summary>
            Override this method if you don't want to extend your children-getting logic.
            Otherwise use IExplorerNodesProviders to provide this logic.
            </summary>
            <returns></returns>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Controls.OpenFromNuGetDialog">
            <summary>
            Interaction logic for OpenFromNuGetDialog.xaml
            </summary>
            <summary>
            OpenFromNuGetDialog
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Controls.OpenFromNuGetDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog">
            <summary>
            Encapsulates dialog functionality from the Credential Management API. Code from http://www.developerfusion.com/code/4693/using-the-credential-management-api/
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.ValidBannerHeight">
            <summary>
            The only valid bitmap height (in pixels) of a user-defined banner.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.ValidBannerWidth">
            <summary>
            The only valid bitmap width (in pixels) of a user-defined banner.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog"/> class with the specified target.
            </summary>
            <param name="target">The name of the target for the credentials, typically a server name.</param>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog"/> class with the specified target and caption.
            </summary>
            <param name="target">The name of the target for the credentials, typically a server name.</param>
            <param name="caption">The caption of the dialog (null will cause a system default title to be used).</param>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog"/> class with the specified target, caption and message.
            </summary>
            <param name="target">The name of the target for the credentials, typically a server name.</param>
            <param name="caption">The caption of the dialog (null will cause a system default title to be used).</param>
            <param name="message">The message of the dialog (null will cause a system default message to be used).</param>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.#ctor(System.String,System.String,System.String,System.Drawing.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog"/> class with the specified target, caption, message and banner.
            </summary>
            <param name="target">The name of the target for the credentials, typically a server name.</param>
            <param name="caption">The caption of the dialog (null will cause a system default title to be used).</param>
            <param name="message">The message of the dialog (null will cause a system default message to be used).</param>
            <param name="banner">The image to display on the dialog (null will cause a system default image to be used).</param>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Show">
            <summary>
            Shows the credentials dialog.
            </summary>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Show(System.Boolean)">
            <summary>
            Shows the credentials dialog with the specified save checkbox status.
            </summary>
            <param name="saveChecked">True if the save checkbox is checked.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Show(System.String)">
            <summary>
            Shows the credentials dialog with the specified name.
            </summary>
            <param name="name">The name for the credentials.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Show(System.String,System.String)">
            <summary>
            Shows the credentials dialog with the specified name and password.
            </summary>
            <param name="name">The name for the credentials.</param>
            <param name="password">The password for the credentials.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Show(System.String,System.String,System.Boolean)">
            <summary>
            Shows the credentials dialog with the specified name, password and save checkbox status.
            </summary>
            <param name="name">The name for the credentials.</param>
            <param name="password">The password for the credentials.</param>
            <param name="saveChecked">True if the save checkbox is checked.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Show(System.Windows.Forms.IWin32Window)">
            <summary>
            Shows the credentials dialog with the specified owner.
            </summary>
            <param name="owner">The System.Windows.Forms.IWin32Window the dialog will display in front of.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Show(System.Windows.Forms.IWin32Window,System.Boolean)">
            <summary>
            Shows the credentials dialog with the specified owner and save checkbox status.
            </summary>
            <param name="owner">The System.Windows.Forms.IWin32Window the dialog will display in front of.</param>
            <param name="saveChecked">True if the save checkbox is checked.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Show(System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>
            Shows the credentials dialog with the specified owner, name and password.
            </summary>
            <param name="owner">The System.Windows.Forms.IWin32Window the dialog will display in front of.</param>
            <param name="name">The name for the credentials.</param>
            <param name="password">The password for the credentials.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Boolean)">
            <summary>
            Shows the credentials dialog with the specified owner, name, password and save checkbox status.
            </summary>
            <param name="owner">The System.Windows.Forms.IWin32Window the dialog will display in front of.</param>
            <param name="name">The name for the credentials.</param>
            <param name="password">The password for the credentials.</param>
            <param name="saveChecked">True if the save checkbox is checked.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Confirm(System.Boolean)">
            <summary>
            Confirmation action to be applied.
            </summary>
            <param name="value">True if the credentials should be persisted.</param>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
            <summary>
            Returns a DialogResult indicating the user action.
            </summary>
            <param name="owner">The System.Windows.Forms.IWin32Window the dialog will display in front of.</param>
            <remarks>
            Sets the name, password and SaveChecked accessors to the state of the dialog as it was dismissed by the user.
            </remarks>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.GetInfo(System.Windows.Forms.IWin32Window)">
            <summary>Returns the info structure for dialog display settings.</summary>
            <param name="owner">The System.Windows.Forms.IWin32Window the dialog will display in front of.</param>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.GetFlags">
            <summary>Returns the flags for dialog display options.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.GetDialogResult(JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CREDUI.ReturnCodes)">
            <summary>Returns a DialogResult from the specified code.</summary>
            <param name="code">The credential return code.</param>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.AlwaysDisplay">
            <summary>
            Gets or sets if the dialog will be shown even if the credentials can be returned from an existing credential in the credential manager.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.ExcludeCertificates">
            <summary>
            Gets or sets if the dialog is populated with name/password only.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Persist">
            <summary>
            Gets or sets if the credentials are to be persisted in the credential manager.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.KeepName">
            <summary>
            Gets or sets if the name is read-only.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Username">
            <summary>
            Gets or sets the username for the credentials.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Password">
            <summary>
            Gets or sets the password for the credentials.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.SaveChecked">
            <summary>
            Gets or sets the save checkbox status.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.SaveDisplayed">
            <summary>Gets or sets if the save checkbox is displayed.</summary>
            <remarks>This value only has effect if Persist is true.</remarks>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Target">
            <summary>
            Gets or sets the name of the target for the credentials, typically a server name.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Caption">
            <summary>
            Gets or sets the caption of the dialog.
            </summary>
            <remarks>A null value will cause a system default caption to be used.</remarks>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Message">
            <summary>
            Gets or sets the message of the dialog.
            </summary>
            <remarks>A null value will cause a system default message to be used.</remarks>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CredentialsDialog.Banner">
            <summary>
            Gets or sets the image to display on the dialog.
            </summary>
            <remarks>A null value will cause a system default image to be used.</remarks>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CREDUI.MAX_MESSAGE_LENGTH">
            <summary>http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthn/security/authentication_constants.asp</summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CREDUI.PromptForCredentials(JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CREDUI.INFO@,System.String,System.IntPtr,System.Int32,System.Text.StringBuilder,System.Int32,System.Text.StringBuilder,System.Int32,System.Int32@,JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CREDUI.FLAGS)">
            <summary>
            http://www.pinvoke.net/default.aspx/credui.CredUIPromptForCredentialsW
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthn/security/creduipromptforcredentials.asp
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CREDUI.ConfirmCredentials(System.String,System.Boolean)">
            <summary>
            http://www.pinvoke.net/default.aspx/credui.CredUIConfirmCredentials
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthn/security/creduiconfirmcredentials.asp
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CREDUI.FLAGS">
            <summary>
            http://www.pinvoke.net/default.aspx/Enums.CREDUI_FLAGS
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnnetsec/html/dpapiusercredentials.asp
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthn/security/creduipromptforcredentials.asp
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CREDUI.ReturnCodes">
            <summary>http://www.pinvoke.net/default.aspx/Enums.CredUIReturnCodes</summary>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.NuPeek.Infrastructure.CREDUI.INFO">
            <summary>
            http://www.pinvoke.net/default.aspx/Structures.CREDUI_INFO
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthn/security/credui_info.asp
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.PdbGeneration.IPdbGenerationParameters.Folder">
            <summary>
            Root folder for pdb generation
            </summary>
            <remarks>Sources for pdb are generated into another folder (see ISharedDecompilationCache)</remarks>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.PdbGeneration.PdbGenerationDialog">
            <summary>
            Interaction logic for ExportToProjectDialog.xaml
            </summary>
            <summary>
            PdbGenerationDialog
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.PdbGeneration.PdbGenerationDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Generation.ToolWindow.GenerationView">
            <summary>
            Interaction logic for GenerationView.xaml
            </summary>
            <summary>
            GenerationView
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.Generation.ToolWindow.GenerationView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.ILViewer.CachedDebugData.TryGetDebugData(JetBrains.ProjectModel.IProjectFile,JetBrains.ProjectModel.Model2.Assemblies.Interfaces.IAssembly@,System.String@,System.Boolean)">
            <returns>
            null, if assembly == null (i.e. we can not show IL);
            DebugData.Empty, if assembly != null, but debug data is not found (e.g. pdb signature does not correspond to signature from assembly)
            (in this case we can show IL (without sequence point matching), because assembly is found);
            DebugData.Empty, if mainThread is false and output assembly for project exists
            (if mainThread is false, then method ForceCreateOutputAssembly should not be called, so assembly is null)
            </returns>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.Resources.BindExternalSourcesProviderBase">
            <summary>
            Binds various decompiled files to assemblies
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.ILViewer.IlViewerViewModel.Lines">
            <remarks>StartLine of range is treated as caret line</remarks>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.ILViewer.RangeTree.TokenOwnerIlRangeNode.Name">
            <summary>
            Short name of metadataEntity
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.ILViewer.RangeTree.RangeTreeUtil.TryGetTokenOwnerNode(JetBrains.ReSharper.ExternalSources.ILViewer.RangeTree.IlRangeNode)">
            <returns>
            ilRange node, if it is TokenOwnerIlRangeNode,
            containing node of type TokenOwnerIlRangeNode otherwise</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.ILViewer.RangeTree.RangeTreeUtil.GetTypeChain(JetBrains.ReSharper.Psi.Tree.ITypeDeclaration)">
            <remarks>
            result[i] is parent for result[i+1];
            result[0] is top-level type;
            result.Last() is typeDeclaration
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons">
             <summary>
              <para>
                <para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/>.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
              <para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
              <h1>XAML</h1>
              <para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
              <para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"/> property to the <see cref="T:JetBrains.UI.Icons.ThemedIconExtension"/> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class) as a parameter.</para>
              <para>Example:</para>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AddNugetPackage}" /&gt;</code>
              <h1>Attributes</h1>
              <para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
              <para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"/> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
              <para>Example:</para>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AddNugetPackage))]</code>
              <h1>CodeBehind</h1>
              <para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
              <para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"/>, statically defined in <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"/> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"/> to use with GDI+ / Windows Forms.</para>
              <para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes — either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> and its extensions for the related facilities.</para>
              <para>Example:</para>
              <code>// Getting IconId identifier object to use with APIs
            IconId iconid = AssemblyExplorerThemedIcons.AddNugetPackage.Id;</code>
              <code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = CompiledIconClassAttribute.TryGetCompiledIconClassId(typeof(AssemblyExplorerThemedIcons.AddNugetPackage), OnError.Throw);</code>
              <code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
              <code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AddNugetPackage&gt;()</code>
              <h1>Icons Origin</h1>
              <para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AddNugetPackage">
             <summary>
              <para>
                <para>Autogenerated identifier class for the AddNugetPackage Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AddNugetPackage.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AddNugetPackage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AddNugetPackage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AddNugetPackage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AddNugetPackage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AddNugetPackage.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the AddNugetPackage Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AddNugetPackage"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AddNugetPackage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AddNugetPackage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AddNugetPackage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AddNugetPackage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AddProcess">
             <summary>
              <para>
                <para>Autogenerated identifier class for the AddProcess Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AddProcess.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AddProcess}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AddProcess))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AddProcess.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AddProcess&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AddProcess.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the AddProcess Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AddProcess"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AddProcess}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AddProcess))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AddProcess.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AddProcess&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyAdd">
             <summary>
              <para>
                <para>Autogenerated identifier class for the AssemblyAdd Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyAdd.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AssemblyAdd}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AssemblyAdd))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AssemblyAdd.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AssemblyAdd&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyAdd.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the AssemblyAdd Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyAdd"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AssemblyAdd}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AssemblyAdd))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AssemblyAdd.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AssemblyAdd&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyBroken">
             <summary>
              <para>
                <para>Autogenerated identifier class for the AssemblyBroken Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyBroken.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AssemblyBroken}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AssemblyBroken))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AssemblyBroken.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AssemblyBroken&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyBroken.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the AssemblyBroken Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyBroken"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AssemblyBroken}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AssemblyBroken))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AssemblyBroken.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AssemblyBroken&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyExplorerOpenFromGac">
             <summary>
              <para>
                <para>Autogenerated identifier class for the AssemblyExplorerOpenFromGac Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyExplorerOpenFromGac.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AssemblyExplorerOpenFromGac}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AssemblyExplorerOpenFromGac))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AssemblyExplorerOpenFromGac.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AssemblyExplorerOpenFromGac&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyExplorerOpenFromGac.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the AssemblyExplorerOpenFromGac Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyExplorerOpenFromGac"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AssemblyExplorerOpenFromGac}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AssemblyExplorerOpenFromGac))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AssemblyExplorerOpenFromGac.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AssemblyExplorerOpenFromGac&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyExplorerToolWindow">
             <summary>
              <para>
                <para>Autogenerated identifier class for the AssemblyExplorerToolWindow Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyExplorerToolWindow.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AssemblyExplorerToolWindow}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AssemblyExplorerToolWindow))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AssemblyExplorerToolWindow.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AssemblyExplorerToolWindow&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyExplorerToolWindow.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the AssemblyExplorerToolWindow Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyExplorerToolWindow"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AssemblyExplorerToolWindow}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AssemblyExplorerToolWindow))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AssemblyExplorerToolWindow.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AssemblyExplorerToolWindow&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyReferenceBroken">
             <summary>
              <para>
                <para>Autogenerated identifier class for the AssemblyReferenceBroken Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyReferenceBroken.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AssemblyReferenceBroken}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AssemblyReferenceBroken))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AssemblyReferenceBroken.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AssemblyReferenceBroken&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyReferenceBroken.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the AssemblyReferenceBroken Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.AssemblyReferenceBroken"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+AssemblyReferenceBroken}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.AssemblyReferenceBroken))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.AssemblyReferenceBroken.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.AssemblyReferenceBroken&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.DocumentBitmap">
             <summary>
              <para>
                <para>Autogenerated identifier class for the DocumentBitmap Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.DocumentBitmap.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+DocumentBitmap}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.DocumentBitmap))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.DocumentBitmap.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.DocumentBitmap&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.DocumentBitmap.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the DocumentBitmap Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.DocumentBitmap"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+DocumentBitmap}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.DocumentBitmap))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.DocumentBitmap.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.DocumentBitmap&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.DocumentContainer">
             <summary>
              <para>
                <para>Autogenerated identifier class for the DocumentContainer Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.DocumentContainer.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+DocumentContainer}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.DocumentContainer))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.DocumentContainer.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.DocumentContainer&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.DocumentContainer.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the DocumentContainer Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.DocumentContainer"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+DocumentContainer}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.DocumentContainer))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.DocumentContainer.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.DocumentContainer&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderOpened">
             <summary>
              <para>
                <para>Autogenerated identifier class for the FolderOpened Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderOpened.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+FolderOpened}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.FolderOpened))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.FolderOpened.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.FolderOpened&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderOpened.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the FolderOpened Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderOpened"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+FolderOpened}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.FolderOpened))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.FolderOpened.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.FolderOpened&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderReferencesClosed">
             <summary>
              <para>
                <para>Autogenerated identifier class for the FolderReferencesClosed Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderReferencesClosed.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+FolderReferencesClosed}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.FolderReferencesClosed))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.FolderReferencesClosed.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.FolderReferencesClosed&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderReferencesClosed.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the FolderReferencesClosed Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderReferencesClosed"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+FolderReferencesClosed}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.FolderReferencesClosed))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.FolderReferencesClosed.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.FolderReferencesClosed&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderReferencesOpened">
             <summary>
              <para>
                <para>Autogenerated identifier class for the FolderReferencesOpened Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderReferencesOpened.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+FolderReferencesOpened}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.FolderReferencesOpened))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.FolderReferencesOpened.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.FolderReferencesOpened&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderReferencesOpened.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the FolderReferencesOpened Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderReferencesOpened"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+FolderReferencesOpened}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.FolderReferencesOpened))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.FolderReferencesOpened.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.FolderReferencesOpened&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderResourcesClosed">
             <summary>
              <para>
                <para>Autogenerated identifier class for the FolderResourcesClosed Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderResourcesClosed.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+FolderResourcesClosed}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.FolderResourcesClosed))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.FolderResourcesClosed.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.FolderResourcesClosed&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderResourcesClosed.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the FolderResourcesClosed Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderResourcesClosed"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+FolderResourcesClosed}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.FolderResourcesClosed))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.FolderResourcesClosed.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.FolderResourcesClosed&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderResourcesOpened">
             <summary>
              <para>
                <para>Autogenerated identifier class for the FolderResourcesOpened Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderResourcesOpened.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+FolderResourcesOpened}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.FolderResourcesOpened))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.FolderResourcesOpened.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.FolderResourcesOpened&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderResourcesOpened.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the FolderResourcesOpened Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderResourcesOpened"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+FolderResourcesOpened}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.FolderResourcesOpened))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.FolderResourcesOpened.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.FolderResourcesOpened&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderUnloaded">
             <summary>
              <para>
                <para>Autogenerated identifier class for the FolderUnloaded Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderUnloaded.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+FolderUnloaded}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.FolderUnloaded))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.FolderUnloaded.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.FolderUnloaded&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderUnloaded.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the FolderUnloaded Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.FolderUnloaded"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+FolderUnloaded}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.FolderUnloaded))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.FolderUnloaded.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.FolderUnloaded&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.LibraryAdd">
             <summary>
              <para>
                <para>Autogenerated identifier class for the LibraryAdd Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.LibraryAdd.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+LibraryAdd}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.LibraryAdd))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.LibraryAdd.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.LibraryAdd&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.LibraryAdd.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the LibraryAdd Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.LibraryAdd"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+LibraryAdd}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.LibraryAdd))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.LibraryAdd.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.LibraryAdd&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.NugetFolderClosed">
             <summary>
              <para>
                <para>Autogenerated identifier class for the NugetFolderClosed Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.NugetFolderClosed.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+NugetFolderClosed}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.NugetFolderClosed))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.NugetFolderClosed.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.NugetFolderClosed&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.NugetFolderClosed.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the NugetFolderClosed Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.NugetFolderClosed"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+NugetFolderClosed}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.NugetFolderClosed))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.NugetFolderClosed.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.NugetFolderClosed&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.NugetFolderOpened">
             <summary>
              <para>
                <para>Autogenerated identifier class for the NugetFolderOpened Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.NugetFolderOpened.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+NugetFolderOpened}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.NugetFolderOpened))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.NugetFolderOpened.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.NugetFolderOpened&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.NugetFolderOpened.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the NugetFolderOpened Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.NugetFolderOpened"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+NugetFolderOpened}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.NugetFolderOpened))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.NugetFolderOpened.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.NugetFolderOpened&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.NugetFolderUnloaded">
             <summary>
              <para>
                <para>Autogenerated identifier class for the NugetFolderUnloaded Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.NugetFolderUnloaded.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+NugetFolderUnloaded}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.NugetFolderUnloaded))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.NugetFolderUnloaded.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.NugetFolderUnloaded&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.NugetFolderUnloaded.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the NugetFolderUnloaded Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.NugetFolderUnloaded"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+NugetFolderUnloaded}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.NugetFolderUnloaded))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.NugetFolderUnloaded.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.NugetFolderUnloaded&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.Produce">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Produce Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.Produce.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+Produce}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.Produce))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.Produce.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.Produce&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.Produce.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Produce Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.Produce"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+Produce}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.Produce))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.Produce.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.Produce&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ProjectGeneration">
             <summary>
              <para>
                <para>Autogenerated identifier class for the ProjectGeneration Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ProjectGeneration.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+ProjectGeneration}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.ProjectGeneration))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.ProjectGeneration.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.ProjectGeneration&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ProjectGeneration.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the ProjectGeneration Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ProjectGeneration"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+ProjectGeneration}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.ProjectGeneration))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.ProjectGeneration.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.ProjectGeneration&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.WorkspaceClear">
             <summary>
              <para>
                <para>Autogenerated identifier class for the WorkspaceClear Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.WorkspaceClear.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+WorkspaceClear}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.WorkspaceClear))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.WorkspaceClear.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.WorkspaceClear&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.WorkspaceClear.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the WorkspaceClear Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.WorkspaceClear"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+WorkspaceClear}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.WorkspaceClear))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.WorkspaceClear.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.WorkspaceClear&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.WorkspaceLoad">
             <summary>
              <para>
                <para>Autogenerated identifier class for the WorkspaceLoad Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.WorkspaceLoad.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+WorkspaceLoad}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.WorkspaceLoad))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.WorkspaceLoad.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.WorkspaceLoad&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.WorkspaceLoad.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the WorkspaceLoad Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.WorkspaceLoad"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+WorkspaceLoad}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.WorkspaceLoad))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.WorkspaceLoad.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.WorkspaceLoad&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.WorkspaceSave">
             <summary>
              <para>
                <para>Autogenerated identifier class for the WorkspaceSave Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.WorkspaceSave.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+WorkspaceSave}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.WorkspaceSave))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.WorkspaceSave.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.WorkspaceSave&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.WorkspaceSave.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the WorkspaceSave Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.WorkspaceSave"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+WorkspaceSave}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.WorkspaceSave))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.WorkspaceSave.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.WorkspaceSave&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ZipFolderClosed">
             <summary>
              <para>
                <para>Autogenerated identifier class for the ZipFolderClosed Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ZipFolderClosed.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+ZipFolderClosed}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.ZipFolderClosed))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.ZipFolderClosed.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.ZipFolderClosed&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ZipFolderClosed.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the ZipFolderClosed Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ZipFolderClosed"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+ZipFolderClosed}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.ZipFolderClosed))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.ZipFolderClosed.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.ZipFolderClosed&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ZipFolderOpened">
             <summary>
              <para>
                <para>Autogenerated identifier class for the ZipFolderOpened Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ZipFolderOpened.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+ZipFolderOpened}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.ZipFolderOpened))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.ZipFolderOpened.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.ZipFolderOpened&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ZipFolderOpened.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the ZipFolderOpened Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ZipFolderOpened"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+ZipFolderOpened}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.ZipFolderOpened))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.ZipFolderOpened.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.ZipFolderOpened&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ZipFolderUnloaded">
             <summary>
              <para>
                <para>Autogenerated identifier class for the ZipFolderUnloaded Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ZipFolderUnloaded.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+ZipFolderUnloaded}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.ZipFolderUnloaded))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.ZipFolderUnloaded.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.ZipFolderUnloaded&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ZipFolderUnloaded.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the ZipFolderUnloaded Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons.ZipFolderUnloaded"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.AssemblyExplorerThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:AssemblyExplorerThemedIcons+ZipFolderUnloaded}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(AssemblyExplorerThemedIcons.ZipFolderUnloaded))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = AssemblyExplorerThemedIcons.ZipFolderUnloaded.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;AssemblyExplorerThemedIcons.ZipFolderUnloaded&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons">
             <summary>
              <para>
                <para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/>.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
              <para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
              <h1>XAML</h1>
              <para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
              <para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"/> property to the <see cref="T:JetBrains.UI.Icons.ThemedIconExtension"/> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class) as a parameter.</para>
              <para>Example:</para>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Attrib}" /&gt;</code>
              <h1>Attributes</h1>
              <para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
              <para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"/> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
              <para>Example:</para>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Attrib))]</code>
              <h1>CodeBehind</h1>
              <para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
              <para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"/>, statically defined in <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"/> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"/> to use with GDI+ / Windows Forms.</para>
              <para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes — either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> and its extensions for the related facilities.</para>
              <para>Example:</para>
              <code>// Getting IconId identifier object to use with APIs
            IconId iconid = ExternalSourcesThemedIcons.Attrib.Id;</code>
              <code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = CompiledIconClassAttribute.TryGetCompiledIconClassId(typeof(ExternalSourcesThemedIcons.Attrib), OnError.Throw);</code>
              <code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
              <code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Attrib&gt;()</code>
              <h1>Icons Origin</h1>
              <para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Attrib">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Attrib Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Attrib.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Attrib}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Attrib))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Attrib.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Attrib&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Attrib.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Attrib Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Attrib"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Attrib}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Attrib))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Attrib.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Attrib&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.AttribSecurity">
             <summary>
              <para>
                <para>Autogenerated identifier class for the AttribSecurity Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.AttribSecurity.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+AttribSecurity}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.AttribSecurity))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.AttribSecurity.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.AttribSecurity&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.AttribSecurity.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the AttribSecurity Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.AttribSecurity"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+AttribSecurity}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.AttribSecurity))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.AttribSecurity.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.AttribSecurity&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Blob">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Blob Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Blob.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Blob}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Blob))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Blob.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Blob&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Blob.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Blob Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Blob"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Blob}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Blob))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Blob.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Blob&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ClassInfo">
             <summary>
              <para>
                <para>Autogenerated identifier class for the ClassInfo Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ClassInfo.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+ClassInfo}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.ClassInfo))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.ClassInfo.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.ClassInfo&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ClassInfo.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the ClassInfo Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ClassInfo"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+ClassInfo}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.ClassInfo))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.ClassInfo.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.ClassInfo&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ClassNested">
             <summary>
              <para>
                <para>Autogenerated identifier class for the ClassNested Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ClassNested.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+ClassNested}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.ClassNested))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.ClassNested.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.ClassNested&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ClassNested.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the ClassNested Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ClassNested"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+ClassNested}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.ClassNested))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.ClassNested.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.ClassNested&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ClassReference">
             <summary>
              <para>
                <para>Autogenerated identifier class for the ClassReference Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ClassReference.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+ClassReference}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.ClassReference))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.ClassReference.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.ClassReference&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ClassReference.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the ClassReference Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ClassReference"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+ClassReference}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.ClassReference))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.ClassReference.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.ClassReference&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.DecompiledSources">
             <summary>
              <para>
                <para>Autogenerated identifier class for the DecompiledSources Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.DecompiledSources.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+DecompiledSources}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.DecompiledSources))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.DecompiledSources.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.DecompiledSources&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.DecompiledSources.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the DecompiledSources Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.DecompiledSources"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+DecompiledSources}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.DecompiledSources))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.DecompiledSources.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.DecompiledSources&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.EventMap">
             <summary>
              <para>
                <para>Autogenerated identifier class for the EventMap Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.EventMap.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+EventMap}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.EventMap))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.EventMap.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.EventMap&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.EventMap.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the EventMap Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.EventMap"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+EventMap}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.EventMap))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.EventMap.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.EventMap&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ExternalSources">
             <summary>
              <para>
                <para>Autogenerated identifier class for the ExternalSources Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ExternalSources.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+ExternalSources}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.ExternalSources))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.ExternalSources.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.ExternalSources&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ExternalSources.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the ExternalSources Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.ExternalSources"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+ExternalSources}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.ExternalSources))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.ExternalSources.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.ExternalSources&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FieldInfo">
             <summary>
              <para>
                <para>Autogenerated identifier class for the FieldInfo Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FieldInfo.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+FieldInfo}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.FieldInfo))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.FieldInfo.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.FieldInfo&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FieldInfo.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the FieldInfo Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FieldInfo"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+FieldInfo}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.FieldInfo))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.FieldInfo.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.FieldInfo&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FieldValue">
             <summary>
              <para>
                <para>Autogenerated identifier class for the FieldValue Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FieldValue.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+FieldValue}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.FieldValue))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.FieldValue.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.FieldValue&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FieldValue.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the FieldValue Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FieldValue"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+FieldValue}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.FieldValue))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.FieldValue.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.FieldValue&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.File">
             <summary>
              <para>
                <para>Autogenerated identifier class for the File Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.File.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+File}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.File))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.File.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.File&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.File.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the File Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.File"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+File}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.File))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.File.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.File&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FlagChecked">
             <summary>
              <para>
                <para>Autogenerated identifier class for the FlagChecked Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FlagChecked.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+FlagChecked}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.FlagChecked))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.FlagChecked.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.FlagChecked&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FlagChecked.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the FlagChecked Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FlagChecked"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+FlagChecked}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.FlagChecked))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.FlagChecked.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.FlagChecked&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Flags">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Flags Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Flags.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Flags}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Flags))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Flags.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Flags&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Flags.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Flags Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Flags"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Flags}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Flags))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Flags.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Flags&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FlagUnchecked">
             <summary>
              <para>
                <para>Autogenerated identifier class for the FlagUnchecked Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FlagUnchecked.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+FlagUnchecked}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.FlagUnchecked))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.FlagUnchecked.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.FlagUnchecked&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FlagUnchecked.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the FlagUnchecked Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.FlagUnchecked"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+FlagUnchecked}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.FlagUnchecked))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.FlagUnchecked.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.FlagUnchecked&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.GenerationLog">
             <summary>
              <para>
                <para>Autogenerated identifier class for the GenerationLog Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.GenerationLog.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+GenerationLog}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.GenerationLog))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.GenerationLog.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.GenerationLog&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.GenerationLog.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the GenerationLog Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.GenerationLog"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+GenerationLog}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.GenerationLog))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.GenerationLog.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.GenerationLog&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Generic">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Generic Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Generic.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Generic}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Generic))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Generic.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Generic&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Generic.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Generic Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Generic"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Generic}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Generic))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Generic.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Generic&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.GenericConstraint">
             <summary>
              <para>
                <para>Autogenerated identifier class for the GenericConstraint Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.GenericConstraint.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+GenericConstraint}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.GenericConstraint))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.GenericConstraint.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.GenericConstraint&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.GenericConstraint.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the GenericConstraint Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.GenericConstraint"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+GenericConstraint}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.GenericConstraint))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.GenericConstraint.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.GenericConstraint&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.GenericMethod">
             <summary>
              <para>
                <para>Autogenerated identifier class for the GenericMethod Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.GenericMethod.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+GenericMethod}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.GenericMethod))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.GenericMethod.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.GenericMethod&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.GenericMethod.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the GenericMethod Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.GenericMethod"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+GenericMethod}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.GenericMethod))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.GenericMethod.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.GenericMethod&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Guid">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Guid Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Guid.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Guid}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Guid))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Guid.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Guid&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Guid.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Guid Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Guid"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Guid}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Guid))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Guid.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Guid&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Header">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Header Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Header.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Header}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Header))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Header.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Header&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Header.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Header Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Header"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Header}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Header))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Header.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Header&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.HeaderField">
             <summary>
              <para>
                <para>Autogenerated identifier class for the HeaderField Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.HeaderField.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+HeaderField}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.HeaderField))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.HeaderField.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.HeaderField&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.HeaderField.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the HeaderField Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.HeaderField"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+HeaderField}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.HeaderField))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.HeaderField.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.HeaderField&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.HeadersRoot">
             <summary>
              <para>
                <para>Autogenerated identifier class for the HeadersRoot Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.HeadersRoot.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+HeadersRoot}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.HeadersRoot))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.HeadersRoot.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.HeadersRoot&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.HeadersRoot.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the HeadersRoot Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.HeadersRoot"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+HeadersRoot}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.HeadersRoot))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.HeadersRoot.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.HeadersRoot&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Integer">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Integer Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Integer.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Integer}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Integer))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Integer.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Integer&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Integer.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Integer Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Integer"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Integer}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Integer))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Integer.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Integer&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Marshalling">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Marshalling Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Marshalling.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Marshalling}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Marshalling))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Marshalling.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Marshalling&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Marshalling.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Marshalling Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Marshalling"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Marshalling}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Marshalling))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Marshalling.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Marshalling&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Mask">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Mask Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Mask.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Mask}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Mask))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Mask.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Mask&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Mask.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Mask Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Mask"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Mask}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Mask))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Mask.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Mask&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MetadataTree">
             <summary>
              <para>
                <para>Autogenerated identifier class for the MetadataTree Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MetadataTree.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MetadataTree}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MetadataTree))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MetadataTree.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MetadataTree&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MetadataTree.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the MetadataTree Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MetadataTree"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MetadataTree}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MetadataTree))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MetadataTree.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MetadataTree&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MetadataView">
             <summary>
              <para>
                <para>Autogenerated identifier class for the MetadataView Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MetadataView.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MetadataView}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MetadataView))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MetadataView.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MetadataView&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MetadataView.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the MetadataView Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MetadataView"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MetadataView}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MetadataView))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MetadataView.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MetadataView&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodImpl">
             <summary>
              <para>
                <para>Autogenerated identifier class for the MethodImpl Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodImpl.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MethodImpl}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MethodImpl))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MethodImpl.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MethodImpl&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodImpl.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the MethodImpl Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodImpl"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MethodImpl}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MethodImpl))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MethodImpl.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MethodImpl&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodInfo">
             <summary>
              <para>
                <para>Autogenerated identifier class for the MethodInfo Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodInfo.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MethodInfo}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MethodInfo))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MethodInfo.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MethodInfo&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodInfo.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the MethodInfo Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodInfo"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MethodInfo}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MethodInfo))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MethodInfo.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MethodInfo&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodNative">
             <summary>
              <para>
                <para>Autogenerated identifier class for the MethodNative Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodNative.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MethodNative}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MethodNative))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MethodNative.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MethodNative&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodNative.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the MethodNative Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodNative"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MethodNative}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MethodNative))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MethodNative.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MethodNative&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodReference">
             <summary>
              <para>
                <para>Autogenerated identifier class for the MethodReference Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodReference.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MethodReference}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MethodReference))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MethodReference.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MethodReference&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodReference.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the MethodReference Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodReference"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MethodReference}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MethodReference))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MethodReference.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MethodReference&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodSpecial">
             <summary>
              <para>
                <para>Autogenerated identifier class for the MethodSpecial Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodSpecial.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MethodSpecial}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MethodSpecial))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MethodSpecial.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MethodSpecial&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodSpecial.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the MethodSpecial Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.MethodSpecial"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+MethodSpecial}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.MethodSpecial))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.MethodSpecial.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.MethodSpecial&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.NativeModuleReference">
             <summary>
              <para>
                <para>Autogenerated identifier class for the NativeModuleReference Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.NativeModuleReference.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+NativeModuleReference}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.NativeModuleReference))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.NativeModuleReference.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.NativeModuleReference&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.NativeModuleReference.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the NativeModuleReference Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.NativeModuleReference"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+NativeModuleReference}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.NativeModuleReference))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.NativeModuleReference.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.NativeModuleReference&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.OptionSelected">
             <summary>
              <para>
                <para>Autogenerated identifier class for the OptionSelected Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.OptionSelected.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+OptionSelected}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.OptionSelected))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.OptionSelected.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.OptionSelected&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.OptionSelected.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the OptionSelected Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.OptionSelected"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+OptionSelected}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.OptionSelected))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.OptionSelected.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.OptionSelected&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.OptionUnselected">
             <summary>
              <para>
                <para>Autogenerated identifier class for the OptionUnselected Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.OptionUnselected.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+OptionUnselected}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.OptionUnselected))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.OptionUnselected.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.OptionUnselected&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.OptionUnselected.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the OptionUnselected Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.OptionUnselected"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+OptionUnselected}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.OptionUnselected))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.OptionUnselected.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.OptionUnselected&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.PropertyMap">
             <summary>
              <para>
                <para>Autogenerated identifier class for the PropertyMap Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.PropertyMap.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+PropertyMap}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.PropertyMap))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.PropertyMap.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.PropertyMap&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.PropertyMap.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the PropertyMap Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.PropertyMap"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+PropertyMap}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.PropertyMap))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.PropertyMap.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.PropertyMap&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Resource">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Resource Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Resource.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Resource}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Resource))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Resource.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Resource&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Resource.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Resource Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Resource"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Resource}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Resource))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Resource.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Resource&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.SourcesFromSymbolFiles">
             <summary>
              <para>
                <para>Autogenerated identifier class for the SourcesFromSymbolFiles Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.SourcesFromSymbolFiles.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+SourcesFromSymbolFiles}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.SourcesFromSymbolFiles))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.SourcesFromSymbolFiles.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.SourcesFromSymbolFiles&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.SourcesFromSymbolFiles.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the SourcesFromSymbolFiles Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.SourcesFromSymbolFiles"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+SourcesFromSymbolFiles}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.SourcesFromSymbolFiles))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.SourcesFromSymbolFiles.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.SourcesFromSymbolFiles&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.StreamRoot">
             <summary>
              <para>
                <para>Autogenerated identifier class for the StreamRoot Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.StreamRoot.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+StreamRoot}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.StreamRoot))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.StreamRoot.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.StreamRoot&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.StreamRoot.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the StreamRoot Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.StreamRoot"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+StreamRoot}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.StreamRoot))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.StreamRoot.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.StreamRoot&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.String">
             <summary>
              <para>
                <para>Autogenerated identifier class for the String Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.String.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+String}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.String))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.String.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.String&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.String.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the String Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.String"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+String}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.String))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.String.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.String&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Usages">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Usages Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Usages.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Usages}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Usages))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Usages.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Usages&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Usages.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Usages Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons.Usages"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.ExternalSources.Resources.ExternalSourcesThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:ExternalSourcesThemedIcons+Usages}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(ExternalSourcesThemedIcons.Usages))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = ExternalSourcesThemedIcons.Usages.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;ExternalSourcesThemedIcons.Usages&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.AssemblyExplorerManager.NavigateToAssemblyExplorer(JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Core.IExplorerNode)">
            <summary>
            Searches through already obtained tree and navigates to a node if it's found. Does not perform getting children.
            </summary>
            <param name="explorerNode"></param>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.AssemblyExplorerPanelNew.CanSearchOccurrenceInto(JetBrains.TreeModels.TreeModelNode)">
            <summary>
            Defines predicate to prevent endless traversing in case of 'infinite' tree model, 
            or pevent consuming a lot of process/memory resources, 
            it defines if we are allowed to get into the given node's children
            </summary>
            <param name="treeModelNode">Node</param>
            <returns>Returns true if we are allowed to get into the given node's children</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Core.AssemblyExplorerUtil.SearchRecursive(JetBrains.TreeModels.TreeModelNode,System.Collections.Generic.List{JetBrains.TreeModels.TreeModelNode},System.Func{JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Core.IExplorerNode,System.Boolean},System.Func{JetBrains.TreeModels.TreeModelNode,System.Boolean})">
            <summary>
            Adds node to result list if it satisfies filter condition.
            Searches recursively in a given treemodel node if stopCondition(node) is false 
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Core.AssemblyExplorerUtil.SearchRecursive(JetBrains.TreeModels.TreeModelNode,System.Collections.Generic.List{JetBrains.TreeModels.TreeModelNode},JetBrains.ReSharper.ExternalSources.AssemblyExplorer.Content.AssemblyExplorerTreeModel,System.Func{JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Core.IExplorerNode,System.Boolean})">
            <summary>
            Searches recursively in a given treemodel node. Does not gets children if they are not cached. Can find folder nodes and assemlby file nodes as well.
            </summary>
            <param name="node"></param>
            <param name="result"></param>
            <param name="assemblyExplorerTreeModel"></param>
            <param name="filter"> </param>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Core.AssemblyExplorerUtil.SearchRecursiveStopAtVirtual(JetBrains.TreeModels.TreeModelNode,System.Collections.Generic.List{JetBrains.TreeModels.TreeModelNode},System.Func{JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Core.IExplorerNode,System.Boolean})">
            <summary>
            Searches recursively in a given treemodel node. 
            Stops at IRecursionCauseNode or IAssemblyFileNode
            Adds node to result list if it satisfies filter condition
            </summary>
            <param name="node">root node of subtree</param>
            <param name="result">list of filtered nodes</param>
            <param name="filter">node filter condition</param>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Core.IRecursionCauseNode">
            <summary>
            Nodes which may couse recursion should implement this interface
            (for example: BaseTypesNode and InheritorsNode)
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.NodeProviders.IExplorerNodesProvider.HasChildrenFast(JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Core.IExplorerNode)">
            <summary>
            Implement if provider can definitely determine [fast] whether a node has children or not
            Otherwise return false and HasChildren method will be used later.
            </summary>
            <param name="explorerNode"></param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.NodeProviders.IExplorerNodesProvider.CollectLoadActions(JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Core.IExplorerNode,System.Collections.Generic.List{System.Action{JetBrains.Application.Progress.IProgressIndicator}})">
            <summary>
            Collects actions to fully load node
            </summary>
            <returns>true if requires collecting actions from child nodes</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.Locators.LocationExtensions.TryGetSourceFileLocations(JetBrains.ReSharper.Psi.ITypeMember)">
            <summary>
            Gets all (ProjFile) sources containing typeMember
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.Locators.LocationExtensions.TryGetNamespaceFolderLocations(JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Locators.AssemblyNamespace)">
            <summary>
            Gets all (ProjFile) folders corresponing to assemblyNamespace.Ns in assemblyNamespace.Assembly
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.Locators.LocationExtensions.TryGetNamespaceFolderLocations(JetBrains.ReSharper.Psi.INamespace,JetBrains.ProjectModel.Model2.Assemblies.Interfaces.IAssembly)">
            <summary>
            Gets all (ProjFile) folders corresponing to ns in assembly
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.Locators.LocationExtensions.SelectFileSystemPathNodes(System.Collections.Generic.IEnumerable{JetBrains.TreeModels.TreeModelNode},System.Collections.Generic.HashSet{JetBrains.Util.FileSystemPath})">
            <summary>
            Selects nodes corresponding to some location in locations from scope
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.Locators.LocationExtensions.SelectAssemblyFileNodes(System.Collections.Generic.IEnumerable{JetBrains.TreeModels.TreeModelNode},JetBrains.ProjectModel.Model2.Assemblies.Interfaces.IAssembly)">
            <summary>
            Selects nodes corresponding to assembly from scope
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileNodes.IProjFileNode.BoundAssemblyPath">
            <summary>
            Path to assembly associated with IProjFileNode.Project
            </summary>
            <remarks>IProjFileNode.Path - path to *.*proj file of IProjFileNode.Project</remarks>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.Persistence.PersistentProjFileNode.AddRemoveMappingsLifetimeBracket(JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.ProjFileModel.ProjFile)">
            <summary>
            Adds mappings to projFile (Project in PersistentProjFileNode),
            removes this mapping when PersistentProjFileNode will be removed from AssemblyExplorer tree
            </summary>    
            <remarks>This method should be called after Project property is initialized (with binding assembly)</remarks>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileNodes.ProjFileNode.AddRemoveMappingsLifetimeBracket(JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.ProjFileModel.ProjFile,JetBrains.DataFlow.Lifetime)">
            <summary>
            Adds mappings to projFile (Project in ProjFileNode),
            removes this mapping when ProjFileNode will be removed from AssemblyExplorer tree
            </summary>    
            <remarks>This method should be called after Project property is initialized (with binding assembly)</remarks>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExplorerNodesModel.Persistence.PersistentAssemblyProvider.BsjbExtensionWithDot">
            <summary>
            File extension for metadata blob files
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.Navigation.AssemblyExplorerNavigationUtil.LocateAndNavigateToNode(System.Object,JetBrains.ProjectModel.ISolution)">
            <summary>
            Locates nodes corresponding to a given target object and navigates to them in assembly explorer.
            </summary>
            <param name="target">target to locate</param>
            <param name="solution"></param>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.Export.ExportToProjectUserInteraction.AskUser(JetBrains.Util.FileSystemPath)">
            <summary>
            Shows task dialog,
            performs user selected action (other then "Export again")
            </summary>
            <returns>true, if user selects "export again"</returns>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.Export.IExportParameters.AddProjectToAssemblyExplorer">
            <summary>
            Add exported project node to assembly explorer tree 
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.Export.IExportParameters.OpenProjectInVisualStudio">
            <summary>
            Open project (or solution, if it is created (i.e. if CreateSolution)) in Visual Studio
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.Export.ExportParameters.#ctor(JetBrains.ProjectModel.Model2.Assemblies.Interfaces.IAssemblyFile,JetBrains.Util.FileSystemPath,JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.FolderIsNotEmptyAction,System.String,System.Boolean,System.Boolean,JetBrains.Util.FileSystemPath,System.Boolean,System.Boolean)">
            <param name="assemblyFile"></param>
            <param name="folder">folder for project exporting</param>
            <param name="folderIsNotEmptyChoice">what to do if chosen folder is not empty</param>
            <param name="projectName">Name of .csproj, .sln and .pdb files (if requested)</param>
            <param name="createSolution">Create appropriate .sln file, if true (and createProject)</param>
            <param name="createPdb">Create appropriate .pdb file, if true (and performDecompilation)</param>
            <param name="pdbFolder">Folder for pdb (if createPdb; null indicates same folder as project folder)</param>
            <param name="addProjectToAssemblyExplorer"></param>
            <param name="openProjectInVisualStudio"></param>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.Export.ExportToProjectDialog">
            <summary>
            Interaction logic for ExportToProjectDialog.xaml
            </summary>
            <summary>
            ExportToProjectDialog
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.Export.ExportToProjectDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.Export.FolderIsNotEmptyDialog">
            <summary>
            Interaction logic for FolderIsNotEmptyDialog.xaml
            </summary>
            <summary>
            FolderIsNotEmptyDialog
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.Export.FolderIsNotEmptyDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.IProjFileSourceMappings.AddMapping(JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.ProjFileModel.LinkedItemElement,JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.ProjFileModel.ProjFile)">
            <summary>
            Creates and adds new mapping between linkedItemElement and projFile if it not exists,
            finds existent mapping otherwise
            </summary>
            <returns>created or finded mapping</returns>
            <remarks>projFile.Assembly should be not null</remarks>
            <exception cref="T:System.ArgumentNullException"> throws if projFile.Assembly is null</exception>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.IProjFileSourceMappings.GetMapping(JetBrains.Util.FileSystemPath)">
            <summary>
            Gets mapping by path (if it is exists)
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.IProjFileSourceMappings.GetMappings(JetBrains.ReSharper.Psi.IClrDeclaredElement)">
            <summary>
            Gets all mappings for declaredElement 
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.IProjFileSourceMappings.RemoveMappings(JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.ProjFileModel.ProjFile)">
            <summary>
            Removes all mappings in  with Project property equals to projFile
            (removes mappings associated with projFile)
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.IProjFileSourceMappings.GetProjFiles(JetBrains.ProjectModel.Model2.Assemblies.Interfaces.IAssembly)">
            <summary>
            Gets all proj files bound with assembly
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.ProjFileAssemblyMappings.GetProjFiles(JetBrains.ProjectModel.Model2.Assemblies.Interfaces.IAssembly)">
            <summary>
            Gets all proj files bound with assembly
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.ProjFileAssemblyMappings.AddMapping(JetBrains.ProjectModel.Model2.Assemblies.Interfaces.IAssembly,JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.ProjFileModel.ProjFile)">
            <summary>
            Adds mapping(assembly, projFile) to mappings (if this mapping is not exists in mappings)
            </summary>    
            <returns>true if mapping(assembly, projFile) is added to mappings; false if this mapping is already present</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.ProjFileAssemblyMappings.RemoveMapping(JetBrains.ProjectModel.Model2.Assemblies.Interfaces.IAssembly,JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.ProjFileModel.ProjFile)">
            <summary>
            Removes mapping(assembly, projFile) from mappings
            </summary>
            <returns>true if mapping(assembly, projFile) is successfully found and removed; otherwise (if this mapping is not found in mappings), false</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.ProjFileAssemblyMappings.RemoveMapping(JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.ProjFileModel.ProjFile)">
            <summary>
            Removes mapping(projFile.Assembly, projFile) from mappings
            </summary>
            <returns>true if mapping(projFile.Assembly, projFile) is successfully found and removed; otherwise (if this mapping is not found in mappings), false</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.ProjFileItemElementMapping.#ctor(JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.ProjFileModel.LinkedItemElement,JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.ProjFileModel.ProjFile,JetBrains.ProjectModel.Model2.Assemblies.Interfaces.IAssembly)">
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.ProjFileItemElementMapping.#ctor(JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.ProjFileModel.LinkedItemElement,JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.ProjFileModel.ProjFile)">
            <remarks>projFile.Assembly should be not null</remarks>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.ProjFileSourceMappingsExtensions.AddMappings(JetBrains.ReSharper.ExternalSources.AssemblyExplorer.ExportedProject.ProjFileModel.IProjFileSourceMappings,JetBrains.ReSharper.Feature.Services.ExternalSources.CSharp.AssemblyExport.ProjFileModel.ProjFile)">
            <summary>
            Adds mappings between (Compile) projFile.LinkedItems and projFile
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.AssemblyExplorer.Resources.ResourceNavigationUtil.ReadResource(JetBrains.ReSharper.ExternalSources.AssemblyExplorer.Resources.IManifestResourceData)">
            <param name="navigationTarget">Either ManifestResourceData or NetResourceEntryData</param>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.MetadataTree.AssemblyContent.ourTablesWithBlobInBlob">
            <summary>
            Items in this tables refer to blobs that refer to another blobs
            (blobs contain other blob offsets)
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.MetadataTree.AssemblyContent.DebugDirectoryEntries">
            <summary>
            Pair.First - Entry
            Pair.Second - Code View Debug Information ([CanBeNull])
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.MetadataTree.BinaryStruct.Offset">
            <summary>
            Offset (from file start)
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.MetadataTree.BinaryStruct.Size">
            <summary>
            Size of struct in bytes
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.MetadataTree.BinaryStructRow.Size">
            <summary>
            Size in bytes
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.MetadataTree.BinaryStructRow.Offset">
            <summary>
            Relative offset (from struct start)
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.MetadataTree.HeadersStructure.CreateFileHeader(JetBrains.Metadata.Utils.PE.PEFile)">
            <summary>
            COFF (file) header
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.MetadataTree.MetadataTablesStructure.Column.PresentationName">
            <remarks>null - for reserved values, column can be skipped in table presentation</remarks>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.MetadataTree.MetadataTablesStructure.Column.DataType">
            <summary>
            <list type="bullet">
            <item><term>MetadataTokenType values</term><description>for corresponding tokens (RID for table tokens)</description></item>
            <item><term>StringHeap</term><description>for offset in #Strings</description></item>
            <item><term>BlobHeap</term><description>for offset in #Blob</description></item>
            <item><term>GuidHeap</term><description>for index in #GUID</description></item>
            <item><term>Negative values (OneByte, TwoBytes, FourBytes)</term><description>for -number of bytes</description></item>
            </list>
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.MetadataTree.MetadataTablesStructure.Column.IsRange">
            <remarks>
            If true then DataType has MetadataTokenType value (less or equal than MaxTableTokenType).
            Token (RID of token) in this column marks the first of a contiguous run of tokens in corresponding table
            (with id (MetadataTableId)DataType).
            </remarks>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.MetadataTree.MetadataTablesStructure.Column.FlagsType">
            <remarks>null only if !IsFlags</remarks>
        </member>
        <member name="P:JetBrains.ReSharper.ExternalSources.MetadataTree.Nodes.BinaryStructRowNode.Offset">
            <summary>
            Offset (from file start)
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.Navigation.Goto.MetadataTokenUtils.GetConstantStringParentCompiledElementByToken(JetBrains.Metadata.Access.MetadataToken,JetBrains.ReSharper.Psi.Modules.IAssemblyPsiModule,JetBrains.Metadata.Reader.API.IMetadataAssembly)">
            <summary>
            Find field/parameter/property with token (constant string parent)
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.Navigation.Goto.StringMatcher">
            <summary>
            Wraps IdentifierMatcher,
            changes it's behaviour to substring matching
            for special filter string
            (text surrounded with quotes or double quotes, this text has more than one character)
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Navigation.Goto.StringMatcher.mySubstringMatcher">
            <remarks>false - IdentifierMatcher behaviour</remarks>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.OpenFromGac.OpenFromGacDialog">
            <summary>
            Interaction logic for OpenFromGacDialog.xaml
            </summary>
            <summary>
            OpenFromGacDialog
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.OpenFromGac.OpenFromGacDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.ReSharperIntegration.ExternalSourcesShowSupportInfoView">
            <summary>
            ExternalSourcesShowSupportInfoView
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.ReSharperIntegration.ExternalSourcesShowSupportInfoView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.ExternalSources.MetadataViewer.MetadataViewerTextControlsUpdater">
            <summary>
            Updates opened text controls with metadata view when MV option changes or different assembly
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.ReSharperIntegration.CSharp.CSharpExternalSourcesNavigationUtil.GetNavigationAreas(JetBrains.ReSharper.Psi.IDeclaredElement,System.Collections.Generic.IEnumerable{JetBrains.ReSharper.ExternalSources.ReSharperIntegration.ExternalSourceFile},JetBrains.ReSharper.Psi.IDeclaredElement)">
            <summary>
            Get navigation area (file + treeNode) to perform precise navigation later in that area.
            </summary>
            <param name="declaredElement"></param>
            <param name="files"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.TaskDialogs.MultipleChoiceTaskDialog.Show(System.String,System.String,System.String,System.Action,System.Int32,System.IntPtr,JetBrains.ReSharper.ExternalSources.TaskDialogs.TaskDescriptor[])">
            <summary>
            Displays modal task dialog in front of the specified window,
            returns a result of user choice.
            </summary>
            <param name="caption">Title bar caption of dialog window</param>
            <param name="instructionText">Purpose of the dialog</param>
            <param name="text">Detailed information for the user</param>
            <param name="hyperlinkAction">action which is performed when hyperlink is clicked, null if no hyperlinks</param>
            <param name="defaultTaskIndex">Selected task button index</param>
            <param name="ownerHandle">Handle of owner window of the dialog</param>
            <param name="tasks">List of alternative actions from which the user makes a choice</param>
            <returns>
            Index of action that the user has chosen or
            -1 if user closes dialog without choosing any alternative or current platform does not support task dialogs</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.TaskDialogs.MultipleChoiceTaskDialog.Show(System.String,System.String,System.String,System.Int32,System.Windows.Window,JetBrains.ReSharper.ExternalSources.TaskDialogs.TaskDescriptor[])">
            <summary>
            Displays modal task dialog in front of the specified window,
            returns a result of user choice.
            </summary>
            <param name="caption">Title bar caption of dialog window</param>
            <param name="instructionText">Purpose of the dialog</param>
            <param name="text">Detailed information for the user</param>
            <param name="defaultTaskIndex">Selected task button index</param>
            <param name="owner">Owner window of the dialog</param>
            <param name="tasks">List of alternative actions from which the user makes a choice</param>
            <returns>
            Index of action that the user has chosen or
            -1 if user closes dialog without choosing any alternative or current platform does not support task dialogs</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.TaskDialogs.MultipleChoiceTaskDialog.Show(System.String,System.String,System.String,System.Int32,System.IntPtr,JetBrains.ReSharper.ExternalSources.TaskDialogs.TaskDescriptor[])">
            <summary>
            Displays modal task dialog in front of the specified window,
            returns a result of user choice.
            </summary>
            <param name="caption">Title bar caption of dialog window</param>
            <param name="instructionText">Purpose of the dialog</param>
            <param name="text">Detailed information for the user</param>
            <param name="defaultTaskIndex">Selected task button index</param>
            <param name="ownerHandle">Handle of owner window of the dialog</param>
            <param name="tasks">List of alternative actions from which the user makes a choice</param>
            <returns>
            Index of action that the user has chosen or
            -1 if user closes dialog without choosing any alternative or current platform does not support task dialogs</returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.TaskDialogs.MultipleChoiceTaskDialog.IsPlatformSupported">
            <summary>
            Determines whether current platform (operating system) supports task dialog
            (Windows Vista or later)
            </summary>
            <returns>true, if supported</returns>
        </member>
        <member name="F:JetBrains.ReSharper.ExternalSources.Pdb.FolderSubstitutions.FolderSubstitutionEditorDialog.components">
            <summary>Required designer variable</summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.Pdb.FolderSubstitutions.FolderSubstitutionEditorDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.Pdb.FolderSubstitutions.FolderSubstitutionEditorDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.ReSharperIntegration.ExternalSourcesPointsProvider.FindSpecificElementInFile(JetBrains.ReSharper.Feature.Services.Navigation.CompiledElementNavigationInfo,System.Collections.Generic.IReadOnlyCollection{JetBrains.ReSharper.Feature.Services.ExternalSource.ExternalSourcesMapping},JetBrains.ReSharper.Psi.Modules.IAssemblyPsiModule,JetBrains.Application.Progress.IProgressIndicator,JetBrains.ReSharper.ExternalSources.ReSharperIntegration.ExternalSourceFile[]@)">
            <param name="compiledElementNavigationInfo">DeclaredElement to find. I.e. we want to navigate to a specific ITypeMember in externalSources</param>
            <param name="files">ExternalSourcesMappings to parse and find elements in</param>
            <param name="assemblyPsiModule">IPsiModule which mapping files were generated against</param>
            <param name="indicator"></param>
            <param name="externalSourceFiles"></param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ReSharper.ExternalSources.ReSharperIntegration.ExternalSourcesFirstTimeNavigation.Execute">
            <summary>
            Show first-time navigation dialog and alter ES options according to
            user choices
            </summary>
            <returns>Whether dialog was successfully executed</returns>
        </member>
    </members>
</doc>
